{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwit\\\\Better-Spotify-Wrapped\\\\client\\\\src\\\\context\\\\SpotifyDataContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { fetchSpotifyDataForYear } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyDataContext = /*#__PURE__*/createContext(null);\nexport const SpotifyDataProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [data, setData] = useState({\n    stats: null,\n    quip: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (selectedYear) {\n      const loadData = async () => {\n        try {\n          setIsLoading(true);\n          const response = await fetchSpotifyDataForYear(selectedYear);\n          setData(response);\n        } catch (err) {\n          setError('Failed to load Spotify data');\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      loadData();\n    }\n  }, [selectedYear]);\n  return /*#__PURE__*/_jsxDEV(SpotifyDataContext.Provider, {\n    value: {\n      spotifyData: data.stats,\n      quip: data.quip,\n      isLoading,\n      error,\n      selectedYear,\n      setSelectedYear\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyDataProvider, \"thGLc/23EjRL50ya7cSLx1Pf/tI=\");\n_c = SpotifyDataProvider;\nvar _c;\n$RefreshReg$(_c, \"SpotifyDataProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","fetchSpotifyDataForYear","jsxDEV","_jsxDEV","SpotifyDataContext","SpotifyDataProvider","children","_s","selectedYear","setSelectedYear","data","setData","stats","quip","isLoading","setIsLoading","error","setError","loadData","response","err","Provider","value","spotifyData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/context/SpotifyDataContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\nimport { fetchSpotifyDataForYear } from '../utils/api';\r\n\r\nconst SpotifyDataContext = createContext(null);\r\n\r\nexport const SpotifyDataProvider = ({ children }) => {\r\n  const [selectedYear, setSelectedYear] = useState(null);\r\n  const [data, setData] = useState({\r\n    stats: null,\r\n    quip: ''\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (selectedYear) {\r\n      const loadData = async () => {\r\n        try {\r\n          setIsLoading(true);\r\n          const response = await fetchSpotifyDataForYear(selectedYear);\r\n          setData(response);\r\n        } catch (err) {\r\n          setError('Failed to load Spotify data');\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      };\r\n      loadData();\r\n    }\r\n  }, [selectedYear]);\r\n\r\n  return (\r\n    <SpotifyDataContext.Provider value={{\r\n      spotifyData: data.stats,\r\n      quip: data.quip,\r\n      isLoading,\r\n      error,\r\n      selectedYear,\r\n      setSelectedYear\r\n    }}>\r\n      {children}\r\n    </SpotifyDataContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtE,SAASC,uBAAuB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,kBAAkB,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMQ,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ba,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,IAAIQ,YAAY,EAAE;MAChB,MAAMU,QAAQ,GAAG,MAAAA,CAAA,KAAY;QAC3B,IAAI;UACFH,YAAY,CAAC,IAAI,CAAC;UAClB,MAAMI,QAAQ,GAAG,MAAMlB,uBAAuB,CAACO,YAAY,CAAC;UAC5DG,OAAO,CAACQ,QAAQ,CAAC;QACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZH,QAAQ,CAAC,6BAA6B,CAAC;QACzC,CAAC,SAAS;UACRF,YAAY,CAAC,KAAK,CAAC;QACrB;MACF,CAAC;MACDG,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,EAAE,CAACV,YAAY,CAAC,CAAC;EAElB,oBACEL,OAAA,CAACC,kBAAkB,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAClCC,WAAW,EAAEb,IAAI,CAACE,KAAK;MACvBC,IAAI,EAAEH,IAAI,CAACG,IAAI;MACfC,SAAS;MACTE,KAAK;MACLR,YAAY;MACZC;IACF,CAAE;IAAAH,QAAA,EACCA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAElC,CAAC;AAACpB,EAAA,CAtCWF,mBAAmB;AAAAuB,EAAA,GAAnBvB,mBAAmB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}