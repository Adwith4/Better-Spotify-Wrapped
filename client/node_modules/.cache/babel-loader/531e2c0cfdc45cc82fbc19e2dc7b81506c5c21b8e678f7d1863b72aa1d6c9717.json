{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwit\\\\Better-Spotify-Wrapped\\\\client\\\\src\\\\pages\\\\Slide5_Clock.jsx\",\n  _s = $RefreshSig$();\n// // src/pages/Slide5_Clock.jsx\n// import React, { useEffect, useState } from 'react';\n// import { Box, Text, Button, VStack } from '@chakra-ui/react';\n// import axios from 'axios';\n// import PageTransition from '../components/PageTransition';\n\n// /*\n//   Example: stats.listeningClock = {\n//     morning: [ 'SongA', 'SongB' ],\n//     afternoon: [ 'SongC' ],\n//     evening: [ 'SongD' ],\n//     night: [ 'SongE', 'SongF' ]\n//   }\n// */\n\n// function Slide5_Clock() {\n//   const [stats, setStats] = useState(null);\n//   const [quip, setQuip] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchClockAndQuip = async () => {\n//       try {\n//         const statsRes = await axios.get('/api/stats/me');\n//         const userStats = Array.isArray(statsRes.data)\n//           ? statsRes.data[0]\n//           : statsRes.data;\n//         setStats(userStats);\n\n//         const quipRes = await axios.post('/api/generate-quip', {\n//           statDescription: 'Your Listening Clock distribution of songs by daypart.',\n//         });\n//         setQuip(quipRes.data.quip);\n//       } catch (err) {\n//         setError('Failed to load listening clock or quip.');\n//       }\n//     };\n//     fetchClockAndQuip();\n//   }, []);\n\n//   const nextSlide = () => (window.location.href = '/slide6');\n\n//   if (error) {\n//     return (\n//       <PageTransition>\n//         <Text color=\"red.300\">{error}</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   if (!stats) {\n//     return (\n//       <PageTransition>\n//         <Text>Loading Clock Data...</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   const { morning = [], afternoon = [], evening = [], night = [] } = stats.listeningClock || {};\n\n//   return (\n//     <PageTransition>\n//       <Box\n//         minH=\"100vh\"\n//         display=\"flex\"\n//         flexDirection=\"column\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//         px={6}\n//       >\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\n//           Listening Clock\n//         </Text>\n//         <VStack spacing={4}>\n//           <Text>Morning: {morning.join(', ')}</Text>\n//           <Text>Afternoon: {afternoon.join(', ')}</Text>\n//           <Text>Evening: {evening.join(', ')}</Text>\n//           <Text>Night: {night.join(', ')}</Text>\n//         </VStack>\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mt={4}>\n//           {quip}\n//         </Text>\n//         <Button\n//           bg=\"spotify.green\"\n//           color=\"spotify.black\"\n//           mt={6}\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\n//           onClick={nextSlide}\n//         >\n//           Next\n//         </Button>\n//       </Box>\n//     </PageTransition>\n//   );\n// }\n\n// export default Slide5_Clock;\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport PageTransition from '../components/PageTransition';\nimport Navigation from '../components/Navigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slide5_Clock() {\n  _s();\n  const [stats, setStats] = useState(null);\n  const [quip, setQuip] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchClockAndQuip = async () => {\n      try {\n        const statsRes = await fetch('/api/stats/me');\n        const userStats = await statsRes.json();\n        const stats = Array.isArray(userStats) ? userStats[0] : userStats;\n        setStats(stats);\n        const quipRes = await fetch('/api/generate-quip', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            statDescription: 'Your Listening Clock distribution of songs by daypart.'\n          })\n        });\n        const quipData = await quipRes.json();\n        setQuip(quipData.quip);\n      } catch (err) {\n        setError('Failed to load listening clock or quip.');\n      }\n    };\n    fetchClockAndQuip();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(PageTransition, {\n      title: \"Error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-400\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(PageTransition, {\n      title: \"Loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Clock Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n  const {\n    morning = [],\n    afternoon = [],\n    evening = [],\n    night = []\n  } = stats.listeningClock || {};\n  return /*#__PURE__*/_jsxDEV(PageTransition, {\n    title: \"Listening Clock\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen px-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: [\"Morning: \", morning.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: [\"Afternoon: \", afternoon.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: [\"Evening: \", evening.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: [\"Night: \", night.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-spotify-green italic text-center mt-4\",\n        children: quip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      currentSlide: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(Slide5_Clock, \"nDOaKaLQcQBTIbzQGXQ/RwTgZqo=\");\n_c = Slide5_Clock;\nexport default Slide5_Clock;\nvar _c;\n$RefreshReg$(_c, \"Slide5_Clock\");","map":{"version":3,"names":["React","useEffect","useState","motion","PageTransition","Navigation","jsxDEV","_jsxDEV","Slide5_Clock","_s","stats","setStats","quip","setQuip","error","setError","fetchClockAndQuip","statsRes","fetch","userStats","json","Array","isArray","quipRes","method","headers","body","JSON","stringify","statDescription","quipData","err","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","morning","afternoon","evening","night","listeningClock","div","initial","opacity","y","animate","join","currentSlide","_c","$RefreshReg$"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/pages/Slide5_Clock.jsx"],"sourcesContent":["// // src/pages/Slide5_Clock.jsx\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Box, Text, Button, VStack } from '@chakra-ui/react';\r\n// import axios from 'axios';\r\n// import PageTransition from '../components/PageTransition';\r\n\r\n// /*\r\n//   Example: stats.listeningClock = {\r\n//     morning: [ 'SongA', 'SongB' ],\r\n//     afternoon: [ 'SongC' ],\r\n//     evening: [ 'SongD' ],\r\n//     night: [ 'SongE', 'SongF' ]\r\n//   }\r\n// */\r\n\r\n// function Slide5_Clock() {\r\n//   const [stats, setStats] = useState(null);\r\n//   const [quip, setQuip] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchClockAndQuip = async () => {\r\n//       try {\r\n//         const statsRes = await axios.get('/api/stats/me');\r\n//         const userStats = Array.isArray(statsRes.data)\r\n//           ? statsRes.data[0]\r\n//           : statsRes.data;\r\n//         setStats(userStats);\r\n\r\n//         const quipRes = await axios.post('/api/generate-quip', {\r\n//           statDescription: 'Your Listening Clock distribution of songs by daypart.',\r\n//         });\r\n//         setQuip(quipRes.data.quip);\r\n//       } catch (err) {\r\n//         setError('Failed to load listening clock or quip.');\r\n//       }\r\n//     };\r\n//     fetchClockAndQuip();\r\n//   }, []);\r\n\r\n//   const nextSlide = () => (window.location.href = '/slide6');\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text color=\"red.300\">{error}</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   if (!stats) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text>Loading Clock Data...</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   const { morning = [], afternoon = [], evening = [], night = [] } = stats.listeningClock || {};\r\n\r\n//   return (\r\n//     <PageTransition>\r\n//       <Box\r\n//         minH=\"100vh\"\r\n//         display=\"flex\"\r\n//         flexDirection=\"column\"\r\n//         alignItems=\"center\"\r\n//         justifyContent=\"center\"\r\n//         px={6}\r\n//       >\r\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\r\n//           Listening Clock\r\n//         </Text>\r\n//         <VStack spacing={4}>\r\n//           <Text>Morning: {morning.join(', ')}</Text>\r\n//           <Text>Afternoon: {afternoon.join(', ')}</Text>\r\n//           <Text>Evening: {evening.join(', ')}</Text>\r\n//           <Text>Night: {night.join(', ')}</Text>\r\n//         </VStack>\r\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mt={4}>\r\n//           {quip}\r\n//         </Text>\r\n//         <Button\r\n//           bg=\"spotify.green\"\r\n//           color=\"spotify.black\"\r\n//           mt={6}\r\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\r\n//           onClick={nextSlide}\r\n//         >\r\n//           Next\r\n//         </Button>\r\n//       </Box>\r\n//     </PageTransition>\r\n//   );\r\n// }\r\n\r\n// export default Slide5_Clock;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport PageTransition from '../components/PageTransition';\r\nimport Navigation from '../components/Navigation';\r\n\r\nfunction Slide5_Clock() {\r\n  const [stats, setStats] = useState(null);\r\n  const [quip, setQuip] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchClockAndQuip = async () => {\r\n      try {\r\n        const statsRes = await fetch('/api/stats/me');\r\n        const userStats = await statsRes.json();\r\n        const stats = Array.isArray(userStats) ? userStats[0] : userStats;\r\n        setStats(stats);\r\n\r\n        const quipRes = await fetch('/api/generate-quip', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            statDescription: 'Your Listening Clock distribution of songs by daypart.',\r\n          }),\r\n        });\r\n        const quipData = await quipRes.json();\r\n        setQuip(quipData.quip);\r\n      } catch (err) {\r\n        setError('Failed to load listening clock or quip.');\r\n      }\r\n    };\r\n    fetchClockAndQuip();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return (\r\n      <PageTransition title=\"Error\">\r\n        <p className=\"text-red-400\">{error}</p>\r\n      </PageTransition>\r\n    );\r\n  }\r\n\r\n  if (!stats) {\r\n    return (\r\n      <PageTransition title=\"Loading\">\r\n        <p>Loading Clock Data...</p>\r\n      </PageTransition>\r\n    );\r\n  }\r\n\r\n  const { morning = [], afternoon = [], evening = [], night = [] } = stats.listeningClock || {};\r\n\r\n  return (\r\n    <PageTransition title=\"Listening Clock\">\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen px-6\">\r\n        <div className=\"space-y-4\">\r\n          <motion.div \r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            className=\"text-center\"\r\n          >\r\n            <p className=\"mb-2\">Morning: {morning.join(', ')}</p>\r\n            <p className=\"mb-2\">Afternoon: {afternoon.join(', ')}</p>\r\n            <p className=\"mb-2\">Evening: {evening.join(', ')}</p>\r\n            <p className=\"mb-2\">Night: {night.join(', ')}</p>\r\n          </motion.div>\r\n        </div>\r\n        <p className=\"text-spotify-green italic text-center mt-4\">\r\n          {quip}\r\n        </p>\r\n      </div>\r\n      <Navigation currentSlide={5} />\r\n    </PageTransition>\r\n  );\r\n}\r\n\r\nexport default Slide5_Clock;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}