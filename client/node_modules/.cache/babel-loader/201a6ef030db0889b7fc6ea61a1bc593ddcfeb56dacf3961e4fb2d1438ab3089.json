{"ast":null,"code":"// // src/pages/Slide5_Clock.jsx\n// import React, { useEffect, useState } from 'react';\n// import { Box, Text, Button, VStack } from '@chakra-ui/react';\n// import axios from 'axios';\n// import PageTransition from '../components/PageTransition';\n\n// /*\n//   Example: stats.listeningClock = {\n//     morning: [ 'SongA', 'SongB' ],\n//     afternoon: [ 'SongC' ],\n//     evening: [ 'SongD' ],\n//     night: [ 'SongE', 'SongF' ]\n//   }\n// */\n\n// function Slide5_Clock() {\n//   const [stats, setStats] = useState(null);\n//   const [quip, setQuip] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchClockAndQuip = async () => {\n//       try {\n//         const statsRes = await axios.get('/api/stats/me');\n//         const userStats = Array.isArray(statsRes.data)\n//           ? statsRes.data[0]\n//           : statsRes.data;\n//         setStats(userStats);\n\n//         const quipRes = await axios.post('/api/generate-quip', {\n//           statDescription: 'Your Listening Clock distribution of songs by daypart.',\n//         });\n//         setQuip(quipRes.data.quip);\n//       } catch (err) {\n//         setError('Failed to load listening clock or quip.');\n//       }\n//     };\n//     fetchClockAndQuip();\n//   }, []);\n\n//   const nextSlide = () => (window.location.href = '/slide6');\n\n//   if (error) {\n//     return (\n//       <PageTransition>\n//         <Text color=\"red.300\">{error}</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   if (!stats) {\n//     return (\n//       <PageTransition>\n//         <Text>Loading Clock Data...</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   const { morning = [], afternoon = [], evening = [], night = [] } = stats.listeningClock || {};\n\n//   return (\n//     <PageTransition>\n//       <Box\n//         minH=\"100vh\"\n//         display=\"flex\"\n//         flexDirection=\"column\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//         px={6}\n//       >\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\n//           Listening Clock\n//         </Text>\n//         <VStack spacing={4}>\n//           <Text>Morning: {morning.join(', ')}</Text>\n//           <Text>Afternoon: {afternoon.join(', ')}</Text>\n//           <Text>Evening: {evening.join(', ')}</Text>\n//           <Text>Night: {night.join(', ')}</Text>\n//         </VStack>\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mt={4}>\n//           {quip}\n//         </Text>\n//         <Button\n//           bg=\"spotify.green\"\n//           color=\"spotify.black\"\n//           mt={6}\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\n//           onClick={nextSlide}\n//         >\n//           Next\n//         </Button>\n//       </Box>\n//     </PageTransition>\n//   );\n// }\n\n// export default Slide5_Clock;","map":{"version":3,"names":[],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/pages/Slide5_Clock.jsx"],"sourcesContent":["// // src/pages/Slide5_Clock.jsx\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Box, Text, Button, VStack } from '@chakra-ui/react';\r\n// import axios from 'axios';\r\n// import PageTransition from '../components/PageTransition';\r\n\r\n// /*\r\n//   Example: stats.listeningClock = {\r\n//     morning: [ 'SongA', 'SongB' ],\r\n//     afternoon: [ 'SongC' ],\r\n//     evening: [ 'SongD' ],\r\n//     night: [ 'SongE', 'SongF' ]\r\n//   }\r\n// */\r\n\r\n// function Slide5_Clock() {\r\n//   const [stats, setStats] = useState(null);\r\n//   const [quip, setQuip] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchClockAndQuip = async () => {\r\n//       try {\r\n//         const statsRes = await axios.get('/api/stats/me');\r\n//         const userStats = Array.isArray(statsRes.data)\r\n//           ? statsRes.data[0]\r\n//           : statsRes.data;\r\n//         setStats(userStats);\r\n\r\n//         const quipRes = await axios.post('/api/generate-quip', {\r\n//           statDescription: 'Your Listening Clock distribution of songs by daypart.',\r\n//         });\r\n//         setQuip(quipRes.data.quip);\r\n//       } catch (err) {\r\n//         setError('Failed to load listening clock or quip.');\r\n//       }\r\n//     };\r\n//     fetchClockAndQuip();\r\n//   }, []);\r\n\r\n//   const nextSlide = () => (window.location.href = '/slide6');\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text color=\"red.300\">{error}</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   if (!stats) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text>Loading Clock Data...</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   const { morning = [], afternoon = [], evening = [], night = [] } = stats.listeningClock || {};\r\n\r\n//   return (\r\n//     <PageTransition>\r\n//       <Box\r\n//         minH=\"100vh\"\r\n//         display=\"flex\"\r\n//         flexDirection=\"column\"\r\n//         alignItems=\"center\"\r\n//         justifyContent=\"center\"\r\n//         px={6}\r\n//       >\r\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\r\n//           Listening Clock\r\n//         </Text>\r\n//         <VStack spacing={4}>\r\n//           <Text>Morning: {morning.join(', ')}</Text>\r\n//           <Text>Afternoon: {afternoon.join(', ')}</Text>\r\n//           <Text>Evening: {evening.join(', ')}</Text>\r\n//           <Text>Night: {night.join(', ')}</Text>\r\n//         </VStack>\r\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mt={4}>\r\n//           {quip}\r\n//         </Text>\r\n//         <Button\r\n//           bg=\"spotify.green\"\r\n//           color=\"spotify.black\"\r\n//           mt={6}\r\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\r\n//           onClick={nextSlide}\r\n//         >\r\n//           Next\r\n//         </Button>\r\n//       </Box>\r\n//     </PageTransition>\r\n//   );\r\n// }\r\n\r\n// export default Slide5_Clock;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}