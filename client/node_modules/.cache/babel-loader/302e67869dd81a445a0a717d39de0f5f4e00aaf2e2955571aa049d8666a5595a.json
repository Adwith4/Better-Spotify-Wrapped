{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwit\\\\Better-Spotify-Wrapped\\\\client\\\\src\\\\pages\\\\Slide5_Clock.jsx\",\n  _s = $RefreshSig$();\n// // src/pages/Slide5_Clock.jsx\n// import React, { useEffect, useState } from 'react';\n// import { Box, Text, Button, VStack } from '@chakra-ui/react';\n// import axios from 'axios';\n// import PageTransition from '../components/PageTransition';\n\n// /*\n//   Example: stats.listeningClock = {\n//     morning: [ 'SongA', 'SongB' ],\n//     afternoon: [ 'SongC' ],\n//     evening: [ 'SongD' ],\n//     night: [ 'SongE', 'SongF' ]\n//   }\n// */\n\n// function Slide5_Clock() {\n//   const [stats, setStats] = useState(null);\n//   const [quip, setQuip] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchClockAndQuip = async () => {\n//       try {\n//         const statsRes = await axios.get('/api/stats/me');\n//         const userStats = Array.isArray(statsRes.data)\n//           ? statsRes.data[0]\n//           : statsRes.data;\n//         setStats(userStats);\n\n//         const quipRes = await axios.post('/api/generate-quip', {\n//           statDescription: 'Your Listening Clock distribution of songs by daypart.',\n//         });\n//         setQuip(quipRes.data.quip);\n//       } catch (err) {\n//         setError('Failed to load listening clock or quip.');\n//       }\n//     };\n//     fetchClockAndQuip();\n//   }, []);\n\n//   const nextSlide = () => (window.location.href = '/slide6');\n\n//   if (error) {\n//     return (\n//       <PageTransition>\n//         <Text color=\"red.300\">{error}</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   if (!stats) {\n//     return (\n//       <PageTransition>\n//         <Text>Loading Clock Data...</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   const { morning = [], afternoon = [], evening = [], night = [] } = stats.listeningClock || {};\n\n//   return (\n//     <PageTransition>\n//       <Box\n//         minH=\"100vh\"\n//         display=\"flex\"\n//         flexDirection=\"column\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//         px={6}\n//       >\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\n//           Listening Clock\n//         </Text>\n//         <VStack spacing={4}>\n//           <Text>Morning: {morning.join(', ')}</Text>\n//           <Text>Afternoon: {afternoon.join(', ')}</Text>\n//           <Text>Evening: {evening.join(', ')}</Text>\n//           <Text>Night: {night.join(', ')}</Text>\n//         </VStack>\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mt={4}>\n//           {quip}\n//         </Text>\n//         <Button\n//           bg=\"spotify.green\"\n//           color=\"spotify.black\"\n//           mt={6}\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\n//           onClick={nextSlide}\n//         >\n//           Next\n//         </Button>\n//       </Box>\n//     </PageTransition>\n//   );\n// }\n\n// export default Slide5_Clock;\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport PageTransition from '../components/PageTransition';\nimport Navigation from '../components/Navigation';\nimport { useSpotifyData } from '../context/SpotifyDataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slide5_Clock() {\n  _s();\n  const {\n    spotifyData,\n    quip,\n    error,\n    isLoading\n  } = useSpotifyData();\n  const {\n    morning,\n    afternoon,\n    evening,\n    night\n  } = spotifyData.listeningClock || {};\n  return /*#__PURE__*/_jsxDEV(PageTransition, {\n    title: \"Your Listening Clock\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen px-4\",\n      children: [error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-400\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading listening patterns...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        className: \"w-full max-w-4xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: [{\n            title: 'Morning',\n            songs: morning\n          }, {\n            title: 'Afternoon',\n            songs: afternoon\n          }, {\n            title: 'Evening',\n            songs: evening\n          }, {\n            title: 'Night',\n            songs: night\n          }].map(({\n            title,\n            songs\n          }) => /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 20\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            className: \"bg-spotify-gray/20 p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-bold mb-2\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: songs === null || songs === void 0 ? void 0 : songs.join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)]\n          }, title, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-spotify-green italic text-center mt-6\",\n          children: quip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        currentSlide: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(Slide5_Clock, \"n/UQ7uPFn5UecA+xjNSWSLFM4pg=\", false, function () {\n  return [useSpotifyData];\n});\n_c = Slide5_Clock;\nexport default Slide5_Clock;\nvar _c;\n$RefreshReg$(_c, \"Slide5_Clock\");","map":{"version":3,"names":["React","motion","PageTransition","Navigation","useSpotifyData","jsxDEV","_jsxDEV","Slide5_Clock","_s","spotifyData","quip","error","isLoading","morning","afternoon","evening","night","listeningClock","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","animate","songs","map","y","join","currentSlide","_c","$RefreshReg$"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/pages/Slide5_Clock.jsx"],"sourcesContent":["// // src/pages/Slide5_Clock.jsx\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Box, Text, Button, VStack } from '@chakra-ui/react';\r\n// import axios from 'axios';\r\n// import PageTransition from '../components/PageTransition';\r\n\r\n// /*\r\n//   Example: stats.listeningClock = {\r\n//     morning: [ 'SongA', 'SongB' ],\r\n//     afternoon: [ 'SongC' ],\r\n//     evening: [ 'SongD' ],\r\n//     night: [ 'SongE', 'SongF' ]\r\n//   }\r\n// */\r\n\r\n// function Slide5_Clock() {\r\n//   const [stats, setStats] = useState(null);\r\n//   const [quip, setQuip] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchClockAndQuip = async () => {\r\n//       try {\r\n//         const statsRes = await axios.get('/api/stats/me');\r\n//         const userStats = Array.isArray(statsRes.data)\r\n//           ? statsRes.data[0]\r\n//           : statsRes.data;\r\n//         setStats(userStats);\r\n\r\n//         const quipRes = await axios.post('/api/generate-quip', {\r\n//           statDescription: 'Your Listening Clock distribution of songs by daypart.',\r\n//         });\r\n//         setQuip(quipRes.data.quip);\r\n//       } catch (err) {\r\n//         setError('Failed to load listening clock or quip.');\r\n//       }\r\n//     };\r\n//     fetchClockAndQuip();\r\n//   }, []);\r\n\r\n//   const nextSlide = () => (window.location.href = '/slide6');\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text color=\"red.300\">{error}</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   if (!stats) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text>Loading Clock Data...</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   const { morning = [], afternoon = [], evening = [], night = [] } = stats.listeningClock || {};\r\n\r\n//   return (\r\n//     <PageTransition>\r\n//       <Box\r\n//         minH=\"100vh\"\r\n//         display=\"flex\"\r\n//         flexDirection=\"column\"\r\n//         alignItems=\"center\"\r\n//         justifyContent=\"center\"\r\n//         px={6}\r\n//       >\r\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\r\n//           Listening Clock\r\n//         </Text>\r\n//         <VStack spacing={4}>\r\n//           <Text>Morning: {morning.join(', ')}</Text>\r\n//           <Text>Afternoon: {afternoon.join(', ')}</Text>\r\n//           <Text>Evening: {evening.join(', ')}</Text>\r\n//           <Text>Night: {night.join(', ')}</Text>\r\n//         </VStack>\r\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mt={4}>\r\n//           {quip}\r\n//         </Text>\r\n//         <Button\r\n//           bg=\"spotify.green\"\r\n//           color=\"spotify.black\"\r\n//           mt={6}\r\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\r\n//           onClick={nextSlide}\r\n//         >\r\n//           Next\r\n//         </Button>\r\n//       </Box>\r\n//     </PageTransition>\r\n//   );\r\n// }\r\n\r\n// export default Slide5_Clock;\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport PageTransition from '../components/PageTransition';\r\nimport Navigation from '../components/Navigation';\r\nimport { useSpotifyData } from '../context/SpotifyDataContext';\r\n\r\nfunction Slide5_Clock() {\r\n  const { spotifyData, quip, error, isLoading } = useSpotifyData();\r\n  const { morning, afternoon, evening, night } = spotifyData.listeningClock || {};\r\n\r\n  return (\r\n    <PageTransition title=\"Your Listening Clock\">\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen px-4\">\r\n        {error ? (\r\n          <p className=\"text-red-400\">{error}</p>\r\n        ) : isLoading ? (\r\n          <p>Loading listening patterns...</p>\r\n        ) : (\r\n          <motion.div \r\n            initial={{ opacity: 0 }} \r\n            animate={{ opacity: 1 }}\r\n            className=\"w-full max-w-4xl\"\r\n          >\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              {[\r\n                { title: 'Morning', songs: morning },\r\n                { title: 'Afternoon', songs: afternoon },\r\n                { title: 'Evening', songs: evening },\r\n                { title: 'Night', songs: night }\r\n              ].map(({ title, songs }) => (\r\n                <motion.div\r\n                  key={title}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"bg-spotify-gray/20 p-4 rounded-lg\"\r\n                >\r\n                  <h3 className=\"text-lg font-bold mb-2\">{title}</h3>\r\n                  <p>{songs?.join(', ')}</p>\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n            <p className=\"text-spotify-green italic text-center mt-6\">{quip}</p>\r\n          </motion.div>\r\n        )}\r\n        <Navigation currentSlide={5} />\r\n      </div>\r\n    </PageTransition>\r\n  );\r\n}\r\n\r\n\r\nexport default Slide5_Clock;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}