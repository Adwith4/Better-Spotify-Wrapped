{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  withCredentials: true\n});\nexport const fetchSpotifyData = async () => {\n  try {\n    const response = await api.get('/fetch-spotify-data');\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch Spotify data');\n  }\n};\nexport const fetchTopArtists = async () => {\n  try {\n    const response = await api.get('/top-artists');\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch top artists');\n  }\n};\nexport const fetchTopTracks = async () => {\n  try {\n    const response = await api.get('/top-tracks');\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch top tracks');\n  }\n};\nexport const fetchUserProfile = async () => {\n  try {\n    const response = await api.get('/user-profile');\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch user profile');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","fetchSpotifyData","response","get","data","error","Error","fetchTopArtists","fetchTopTracks","fetchUserProfile"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3001/api',\r\n  withCredentials: true,\r\n});\r\n\r\nexport const fetchSpotifyData = async () => {\r\n  try {\r\n    const response = await api.get('/fetch-spotify-data');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch Spotify data');\r\n  }\r\n};\r\n\r\nexport const fetchTopArtists = async () => {\r\n  try {\r\n    const response = await api.get('/top-artists');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch top artists');\r\n  }\r\n};\r\n\r\nexport const fetchTopTracks = async () => {\r\n  try {\r\n    const response = await api.get('/top-tracks');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch top tracks');\r\n  }\r\n};\r\n\r\nexport const fetchUserProfile = async () => {\r\n  try {\r\n    const response = await api.get('/user-profile');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch user profile');\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,qBAAqB,CAAC;IACrD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,cAAc,CAAC;IAC9C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;AACF,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAa,CAAC;IAC7C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/C;AACF,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC;AAED,eAAeT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}