{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwit\\\\Better-Spotify-Wrapped\\\\client\\\\src\\\\pages\\\\Slide6_Calendar.jsx\",\n  _s = $RefreshSig$();\n// // src/pages/Slide6_Calendar.jsx\n// import React, { useEffect, useState } from 'react';\n// import { Box, Text, Button } from '@chakra-ui/react';\n// import { Line } from 'react-chartjs-2';\n// import axios from 'axios';\n// import PageTransition from '../components/PageTransition';\n\n// /*\n//   Example: stats.monthlyTrends = [12, 45, 32, 60, 70, 80, 66, 90, 110, 95, 43, 22]\n//   representing Jan - Dec\n// */\n\n// function Slide6_Calendar() {\n//   const [stats, setStats] = useState(null);\n//   const [quip, setQuip] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchDataAndQuip = async () => {\n//       try {\n//         const statsRes = await axios.get('/api/stats/me');\n//         const userStats = Array.isArray(statsRes.data)\n//           ? statsRes.data[0]\n//           : statsRes.data;\n//         setStats(userStats);\n\n//         const quipRes = await axios.post('/api/generate-quip', {\n//           statDescription: 'Your month-by-month listening trends.',\n//         });\n//         setQuip(quipRes.data.quip);\n//       } catch (err) {\n//         setError('Failed to load monthly trends or quip.');\n//       }\n//     };\n//     fetchDataAndQuip();\n//   }, []);\n\n//   const nextSlide = () => (window.location.href = '/slide7');\n\n//   if (error) {\n//     return (\n//       <PageTransition>\n//         <Text color=\"red.300\">{error}</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   if (!stats) {\n//     return (\n//       <PageTransition>\n//         <Text>Loading monthly data...</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n//   const data = {\n//     labels: months,\n//     datasets: [\n//       {\n//         label: 'Streams',\n//         data: stats.monthlyTrends,\n//         borderColor: '#1DB954',\n//         backgroundColor: 'rgba(29, 185, 84, 0.3)',\n//         fill: true,\n//         tension: 0.2,\n//       },\n//     ],\n//   };\n\n//   return (\n//     <PageTransition>\n//       <Box\n//         minH=\"100vh\"\n//         display=\"flex\"\n//         flexDirection=\"column\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//         px={4}\n//       >\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\n//           Month-by-Month Trends\n//         </Text>\n//         <Box width={['90%', '70%', '50%']} mb={6}>\n//           <Line data={data} />\n//         </Box>\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mb={4}>\n//           {quip}\n//         </Text>\n//         <Button\n//           bg=\"spotify.green\"\n//           color=\"spotify.black\"\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\n//           onClick={nextSlide}\n//         >\n//           Next\n//         </Button>\n//       </Box>\n//     </PageTransition>\n//   );\n// }\n\n// export default Slide6_Calendar;\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport PageTransition from '../components/PageTransition';\nimport Navigation from '../components/Navigation';\nimport { useSpotifyData } from '../context/SpotifyDataContext';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slide6_Calendar() {\n  _s();\n  const {\n    spotifyData,\n    quip,\n    error,\n    isLoading\n  } = useSpotifyData();\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const chartData = {\n    labels: months,\n    datasets: [{\n      label: 'Monthly Listening',\n      data: spotifyData.monthlyTrends,\n      borderColor: '#1DB954',\n      backgroundColor: 'rgba(29, 185, 84, 0.3)',\n      fill: true,\n      tension: 0.2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(PageTransition, {\n    title: \"Your Listening Calendar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen px-4\",\n      children: [error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-400\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading calendar data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        className: \"w-full max-w-4xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full max-w-[90%] md:max-w-[70%] lg:max-w-[50%] mx-auto mb-6\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-spotify-green italic text-center\",\n          children: quip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        currentSlide: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(Slide6_Calendar, \"n/UQ7uPFn5UecA+xjNSWSLFM4pg=\", false, function () {\n  return [useSpotifyData];\n});\n_c = Slide6_Calendar;\nexport default Slide6_Calendar;\nvar _c;\n$RefreshReg$(_c, \"Slide6_Calendar\");","map":{"version":3,"names":["React","motion","PageTransition","Navigation","useSpotifyData","Line","jsxDEV","_jsxDEV","Slide6_Calendar","_s","spotifyData","quip","error","isLoading","months","chartData","labels","datasets","label","data","monthlyTrends","borderColor","backgroundColor","fill","tension","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","animate","currentSlide","_c","$RefreshReg$"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/pages/Slide6_Calendar.jsx"],"sourcesContent":["// // src/pages/Slide6_Calendar.jsx\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Box, Text, Button } from '@chakra-ui/react';\r\n// import { Line } from 'react-chartjs-2';\r\n// import axios from 'axios';\r\n// import PageTransition from '../components/PageTransition';\r\n\r\n// /*\r\n//   Example: stats.monthlyTrends = [12, 45, 32, 60, 70, 80, 66, 90, 110, 95, 43, 22]\r\n//   representing Jan - Dec\r\n// */\r\n\r\n// function Slide6_Calendar() {\r\n//   const [stats, setStats] = useState(null);\r\n//   const [quip, setQuip] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchDataAndQuip = async () => {\r\n//       try {\r\n//         const statsRes = await axios.get('/api/stats/me');\r\n//         const userStats = Array.isArray(statsRes.data)\r\n//           ? statsRes.data[0]\r\n//           : statsRes.data;\r\n//         setStats(userStats);\r\n\r\n//         const quipRes = await axios.post('/api/generate-quip', {\r\n//           statDescription: 'Your month-by-month listening trends.',\r\n//         });\r\n//         setQuip(quipRes.data.quip);\r\n//       } catch (err) {\r\n//         setError('Failed to load monthly trends or quip.');\r\n//       }\r\n//     };\r\n//     fetchDataAndQuip();\r\n//   }, []);\r\n\r\n//   const nextSlide = () => (window.location.href = '/slide7');\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text color=\"red.300\">{error}</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   if (!stats) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text>Loading monthly data...</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n//   const data = {\r\n//     labels: months,\r\n//     datasets: [\r\n//       {\r\n//         label: 'Streams',\r\n//         data: stats.monthlyTrends,\r\n//         borderColor: '#1DB954',\r\n//         backgroundColor: 'rgba(29, 185, 84, 0.3)',\r\n//         fill: true,\r\n//         tension: 0.2,\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   return (\r\n//     <PageTransition>\r\n//       <Box\r\n//         minH=\"100vh\"\r\n//         display=\"flex\"\r\n//         flexDirection=\"column\"\r\n//         alignItems=\"center\"\r\n//         justifyContent=\"center\"\r\n//         px={4}\r\n//       >\r\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\r\n//           Month-by-Month Trends\r\n//         </Text>\r\n//         <Box width={['90%', '70%', '50%']} mb={6}>\r\n//           <Line data={data} />\r\n//         </Box>\r\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mb={4}>\r\n//           {quip}\r\n//         </Text>\r\n//         <Button\r\n//           bg=\"spotify.green\"\r\n//           color=\"spotify.black\"\r\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\r\n//           onClick={nextSlide}\r\n//         >\r\n//           Next\r\n//         </Button>\r\n//       </Box>\r\n//     </PageTransition>\r\n//   );\r\n// }\r\n\r\n// export default Slide6_Calendar;\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport PageTransition from '../components/PageTransition';\r\nimport Navigation from '../components/Navigation';\r\nimport { useSpotifyData } from '../context/SpotifyDataContext';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nfunction Slide6_Calendar() {\r\n  const { spotifyData, quip, error, isLoading } = useSpotifyData();\r\n\r\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n  const chartData = {\r\n    labels: months,\r\n    datasets: [{\r\n      label: 'Monthly Listening',\r\n      data: spotifyData.monthlyTrends,\r\n      borderColor: '#1DB954',\r\n      backgroundColor: 'rgba(29, 185, 84, 0.3)',\r\n      fill: true,\r\n      tension: 0.2\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <PageTransition title=\"Your Listening Calendar\">\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen px-4\">\r\n        {error ? (\r\n          <p className=\"text-red-400\">{error}</p>\r\n        ) : isLoading ? (\r\n          <p>Loading calendar data...</p>\r\n        ) : (\r\n          <motion.div \r\n            initial={{ opacity: 0 }} \r\n            animate={{ opacity: 1 }}\r\n            className=\"w-full max-w-4xl\"\r\n          >\r\n            <div className=\"w-full max-w-[90%] md:max-w-[70%] lg:max-w-[50%] mx-auto mb-6\">\r\n              <Line data={chartData} />\r\n            </div>\r\n            <p className=\"text-spotify-green italic text-center\">{quip}</p>\r\n          </motion.div>\r\n        )}\r\n        <Navigation currentSlide={6} />\r\n      </div>\r\n    </PageTransition>\r\n  );\r\n}\r\n\r\nexport default Slide6_Calendar;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC,WAAW;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGT,cAAc,CAAC,CAAC;EAEhE,MAAMU,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EACnG,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEF,MAAM;IACdG,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAE,mBAAmB;MAC1BC,IAAI,EAAET,WAAW,CAACU,aAAa;MAC/BC,WAAW,EAAE,SAAS;MACtBC,eAAe,EAAE,wBAAwB;MACzCC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EAED,oBACEjB,OAAA,CAACL,cAAc;IAACuB,KAAK,EAAC,yBAAyB;IAAAC,QAAA,eAC7CnB,OAAA;MAAKoB,SAAS,EAAC,6DAA6D;MAAAD,QAAA,GACzEd,KAAK,gBACJL,OAAA;QAAGoB,SAAS,EAAC,cAAc;QAAAD,QAAA,EAAEd;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,GACrClB,SAAS,gBACXN,OAAA;QAAAmB,QAAA,EAAG;MAAwB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE/BxB,OAAA,CAACN,MAAM,CAAC+B,GAAG;QACTC,OAAO,EAAE;UAAEC,OAAO,EAAE;QAAE,CAAE;QACxBC,OAAO,EAAE;UAAED,OAAO,EAAE;QAAE,CAAE;QACxBP,SAAS,EAAC,kBAAkB;QAAAD,QAAA,gBAE5BnB,OAAA;UAAKoB,SAAS,EAAC,+DAA+D;UAAAD,QAAA,eAC5EnB,OAAA,CAACF,IAAI;YAACc,IAAI,EAAEJ;UAAU;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eACNxB,OAAA;UAAGoB,SAAS,EAAC,uCAAuC;UAAAD,QAAA,EAAEf;QAAI;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CACb,eACDxB,OAAA,CAACJ,UAAU;QAACiC,YAAY,EAAE;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB;AAACtB,EAAA,CAvCQD,eAAe;EAAA,QAC0BJ,cAAc;AAAA;AAAAiC,EAAA,GADvD7B,eAAe;AAyCxB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}