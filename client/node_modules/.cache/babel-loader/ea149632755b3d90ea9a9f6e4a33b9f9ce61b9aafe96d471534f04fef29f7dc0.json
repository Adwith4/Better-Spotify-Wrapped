{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwit\\\\Better-Spotify-Wrapped\\\\client\\\\src\\\\pages\\\\Slide7_LongestStreak.jsx\",\n  _s = $RefreshSig$();\n// // src/pages/Slide7_LongestStreak.jsx\n// import React, { useEffect, useState } from 'react';\n// import { Box, Text, Button } from '@chakra-ui/react';\n// import axios from 'axios';\n// import PageTransition from '../components/PageTransition';\n\n// function Slide7_LongestStreak() {\n//   const [stats, setStats] = useState(null);\n//   const [quip, setQuip] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchAndQuip = async () => {\n//       try {\n//         const statsRes = await axios.get('/api/stats/me');\n//         const userStats = Array.isArray(statsRes.data) ? statsRes.data[0] : statsRes.data;\n//         setStats(userStats);\n\n//         // Generate quip about the longest listening streak\n//         const quipRes = await axios.post('/api/generate-quip', {\n//           statDescription: `Your longest listening streak is ${userStats.longestStreak} consecutive days!`,\n//         });\n//         setQuip(quipRes.data.quip);\n//       } catch (err) {\n//         setError('Failed to load longest streak or quip.');\n//       }\n//     };\n//     fetchAndQuip();\n//   }, []);\n\n//   const nextSlide = () => (window.location.href = '/slide8');\n\n//   if (error) {\n//     return (\n//       <PageTransition>\n//         <Text color=\"red.300\">{error}</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   if (!stats) {\n//     return (\n//       <PageTransition>\n//         <Text>Loading streak info...</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   return (\n//     <PageTransition>\n//       <Box\n//         minH=\"100vh\"\n//         display=\"flex\"\n//         flexDirection=\"column\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//         px={4}\n//         textAlign=\"center\"\n//       >\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={4}>\n//           Longest Listening Streak\n//         </Text>\n//         <Text mb={6}>\n//           You have listened to Spotify for <strong>{stats.longestStreak}</strong> days in a row!\n//         </Text>\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" mb={4}>\n//           {quip}\n//         </Text>\n//         <Button\n//           bg=\"spotify.green\"\n//           color=\"spotify.black\"\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\n//           onClick={nextSlide}\n//         >\n//           Next\n//         </Button>\n//       </Box>\n//     </PageTransition>\n//   );\n// }\n\n// export default Slide7_LongestStreak;\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport PageTransition from '../components/PageTransition';\nimport Navigation from '../components/Navigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slide7_LongestStreak() {\n  _s();\n  const [stats, setStats] = useState(null);\n  const [quip, setQuip] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchAndQuip = async () => {\n      try {\n        const statsRes = await fetch('/api/stats/me');\n        const userStats = await statsRes.json();\n        const stats = Array.isArray(userStats) ? userStats[0] : userStats;\n        setStats(stats);\n        const quipRes = await fetch('/api/generate-quip', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            statDescription: `Your longest listening streak is ${stats.longestStreak} consecutive days!`\n          })\n        });\n        const quipData = await quipRes.json();\n        setQuip(quipData.quip);\n      } catch (err) {\n        setError('Failed to load longest streak or quip.');\n      }\n    };\n    fetchAndQuip();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(PageTransition, {\n      title: \"Error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-400\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(PageTransition, {\n      title: \"Loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading streak info...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PageTransition, {\n    title: \"Longest Listening Streak\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen px-4 text-center\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          scale: 0\n        },\n        animate: {\n          scale: 1\n        },\n        transition: {\n          duration: 0.5\n        },\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-6\",\n          children: [\"You have listened to Spotify for \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold\",\n            children: stats.longestStreak\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 46\n          }, this), \" days in a row!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-spotify-green italic\",\n          children: quip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      currentSlide: 7\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(Slide7_LongestStreak, \"nDOaKaLQcQBTIbzQGXQ/RwTgZqo=\");\n_c = Slide7_LongestStreak;\nexport default Slide7_LongestStreak;\nvar _c;\n$RefreshReg$(_c, \"Slide7_LongestStreak\");","map":{"version":3,"names":["React","useEffect","useState","motion","PageTransition","Navigation","jsxDEV","_jsxDEV","Slide7_LongestStreak","_s","stats","setStats","quip","setQuip","error","setError","fetchAndQuip","statsRes","fetch","userStats","json","Array","isArray","quipRes","method","headers","body","JSON","stringify","statDescription","longestStreak","quipData","err","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","scale","animate","transition","duration","currentSlide","_c","$RefreshReg$"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/pages/Slide7_LongestStreak.jsx"],"sourcesContent":["// // src/pages/Slide7_LongestStreak.jsx\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Box, Text, Button } from '@chakra-ui/react';\r\n// import axios from 'axios';\r\n// import PageTransition from '../components/PageTransition';\r\n\r\n// function Slide7_LongestStreak() {\r\n//   const [stats, setStats] = useState(null);\r\n//   const [quip, setQuip] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchAndQuip = async () => {\r\n//       try {\r\n//         const statsRes = await axios.get('/api/stats/me');\r\n//         const userStats = Array.isArray(statsRes.data) ? statsRes.data[0] : statsRes.data;\r\n//         setStats(userStats);\r\n\r\n//         // Generate quip about the longest listening streak\r\n//         const quipRes = await axios.post('/api/generate-quip', {\r\n//           statDescription: `Your longest listening streak is ${userStats.longestStreak} consecutive days!`,\r\n//         });\r\n//         setQuip(quipRes.data.quip);\r\n//       } catch (err) {\r\n//         setError('Failed to load longest streak or quip.');\r\n//       }\r\n//     };\r\n//     fetchAndQuip();\r\n//   }, []);\r\n\r\n//   const nextSlide = () => (window.location.href = '/slide8');\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text color=\"red.300\">{error}</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   if (!stats) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text>Loading streak info...</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <PageTransition>\r\n//       <Box\r\n//         minH=\"100vh\"\r\n//         display=\"flex\"\r\n//         flexDirection=\"column\"\r\n//         alignItems=\"center\"\r\n//         justifyContent=\"center\"\r\n//         px={4}\r\n//         textAlign=\"center\"\r\n//       >\r\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={4}>\r\n//           Longest Listening Streak\r\n//         </Text>\r\n//         <Text mb={6}>\r\n//           You have listened to Spotify for <strong>{stats.longestStreak}</strong> days in a row!\r\n//         </Text>\r\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" mb={4}>\r\n//           {quip}\r\n//         </Text>\r\n//         <Button\r\n//           bg=\"spotify.green\"\r\n//           color=\"spotify.black\"\r\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\r\n//           onClick={nextSlide}\r\n//         >\r\n//           Next\r\n//         </Button>\r\n//       </Box>\r\n//     </PageTransition>\r\n//   );\r\n// }\r\n\r\n// export default Slide7_LongestStreak;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport PageTransition from '../components/PageTransition';\r\nimport Navigation from '../components/Navigation';\r\n\r\nfunction Slide7_LongestStreak() {\r\n  const [stats, setStats] = useState(null);\r\n  const [quip, setQuip] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchAndQuip = async () => {\r\n      try {\r\n        const statsRes = await fetch('/api/stats/me');\r\n        const userStats = await statsRes.json();\r\n        const stats = Array.isArray(userStats) ? userStats[0] : userStats;\r\n        setStats(stats);\r\n\r\n        const quipRes = await fetch('/api/generate-quip', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            statDescription: `Your longest listening streak is ${stats.longestStreak} consecutive days!`,\r\n          }),\r\n        });\r\n        const quipData = await quipRes.json();\r\n        setQuip(quipData.quip);\r\n      } catch (err) {\r\n        setError('Failed to load longest streak or quip.');\r\n      }\r\n    };\r\n    fetchAndQuip();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return (\r\n      <PageTransition title=\"Error\">\r\n        <p className=\"text-red-400\">{error}</p>\r\n      </PageTransition>\r\n    );\r\n  }\r\n\r\n  if (!stats) {\r\n    return (\r\n      <PageTransition title=\"Loading\">\r\n        <p>Loading streak info...</p>\r\n      </PageTransition>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageTransition title=\"Longest Listening Streak\">\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen px-4 text-center\">\r\n        <motion.div\r\n          initial={{ scale: 0 }}\r\n          animate={{ scale: 1 }}\r\n          transition={{ duration: 0.5 }}\r\n          className=\"mb-6\"\r\n        >\r\n          <p className=\"mb-6\">\r\n            You have listened to Spotify for <span className=\"font-bold\">{stats.longestStreak}</span> days in a row!\r\n          </p>\r\n          <p className=\"text-spotify-green italic\">\r\n            {quip}\r\n          </p>\r\n        </motion.div>\r\n      </div>\r\n      <Navigation currentSlide={7} />\r\n    </PageTransition>\r\n  );\r\n}\r\n\r\nexport default Slide7_LongestStreak;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}