{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwit\\\\Better-Spotify-Wrapped\\\\client\\\\src\\\\pages\\\\Slide6_Calendar.jsx\",\n  _s = $RefreshSig$();\n// // src/pages/Slide6_Calendar.jsx\n// import React, { useEffect, useState } from 'react';\n// import { Box, Text, Button } from '@chakra-ui/react';\n// import { Line } from 'react-chartjs-2';\n// import axios from 'axios';\n// import PageTransition from '../components/PageTransition';\n\n// /*\n//   Example: stats.monthlyTrends = [12, 45, 32, 60, 70, 80, 66, 90, 110, 95, 43, 22]\n//   representing Jan - Dec\n// */\n\n// function Slide6_Calendar() {\n//   const [stats, setStats] = useState(null);\n//   const [quip, setQuip] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchDataAndQuip = async () => {\n//       try {\n//         const statsRes = await axios.get('/api/stats/me');\n//         const userStats = Array.isArray(statsRes.data)\n//           ? statsRes.data[0]\n//           : statsRes.data;\n//         setStats(userStats);\n\n//         const quipRes = await axios.post('/api/generate-quip', {\n//           statDescription: 'Your month-by-month listening trends.',\n//         });\n//         setQuip(quipRes.data.quip);\n//       } catch (err) {\n//         setError('Failed to load monthly trends or quip.');\n//       }\n//     };\n//     fetchDataAndQuip();\n//   }, []);\n\n//   const nextSlide = () => (window.location.href = '/slide7');\n\n//   if (error) {\n//     return (\n//       <PageTransition>\n//         <Text color=\"red.300\">{error}</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   if (!stats) {\n//     return (\n//       <PageTransition>\n//         <Text>Loading monthly data...</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n//   const data = {\n//     labels: months,\n//     datasets: [\n//       {\n//         label: 'Streams',\n//         data: stats.monthlyTrends,\n//         borderColor: '#1DB954',\n//         backgroundColor: 'rgba(29, 185, 84, 0.3)',\n//         fill: true,\n//         tension: 0.2,\n//       },\n//     ],\n//   };\n\n//   return (\n//     <PageTransition>\n//       <Box\n//         minH=\"100vh\"\n//         display=\"flex\"\n//         flexDirection=\"column\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//         px={4}\n//       >\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\n//           Month-by-Month Trends\n//         </Text>\n//         <Box width={['90%', '70%', '50%']} mb={6}>\n//           <Line data={data} />\n//         </Box>\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mb={4}>\n//           {quip}\n//         </Text>\n//         <Button\n//           bg=\"spotify.green\"\n//           color=\"spotify.black\"\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\n//           onClick={nextSlide}\n//         >\n//           Next\n//         </Button>\n//       </Box>\n//     </PageTransition>\n//   );\n// }\n\n// export default Slide6_Calendar;\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport PageTransition from '../components/PageTransition';\nimport Navigation from '../components/Navigation';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slide6_Calendar() {\n  _s();\n  const [stats, setStats] = useState(null);\n  const [quip, setQuip] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchDataAndQuip = async () => {\n      try {\n        const statsRes = await fetch('/api/stats/me');\n        const userStats = await statsRes.json();\n        const stats = Array.isArray(userStats) ? userStats[0] : userStats;\n        setStats(stats);\n        const quipRes = await fetch('/api/generate-quip', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            statDescription: 'Your month-by-month listening trends.'\n          })\n        });\n        const quipData = await quipRes.json();\n        setQuip(quipData.quip);\n      } catch (err) {\n        setError('Failed to load monthly trends or quip.');\n      }\n    };\n    fetchDataAndQuip();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(PageTransition, {\n      title: \"Error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-400\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(PageTransition, {\n      title: \"Loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading monthly data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const data = {\n    labels: months,\n    datasets: [{\n      label: 'Streams',\n      data: stats.monthlyTrends,\n      borderColor: '#1DB954',\n      backgroundColor: 'rgba(29, 185, 84, 0.3)',\n      fill: true,\n      tension: 0.2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(PageTransition, {\n    title: \"Month-by-Month Trends\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-[90%] md:max-w-[70%] lg:max-w-[50%] mb-6\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-spotify-green italic text-center mb-4\",\n        children: quip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      currentSlide: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(Slide6_Calendar, \"nDOaKaLQcQBTIbzQGXQ/RwTgZqo=\");\n_c = Slide6_Calendar;\nexport default Slide6_Calendar;\nvar _c;\n$RefreshReg$(_c, \"Slide6_Calendar\");","map":{"version":3,"names":["React","useEffect","useState","motion","PageTransition","Navigation","Line","jsxDEV","_jsxDEV","Slide6_Calendar","_s","stats","setStats","quip","setQuip","error","setError","fetchDataAndQuip","statsRes","fetch","userStats","json","Array","isArray","quipRes","method","headers","body","JSON","stringify","statDescription","quipData","err","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","months","data","labels","datasets","label","monthlyTrends","borderColor","backgroundColor","fill","tension","currentSlide","_c","$RefreshReg$"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/pages/Slide6_Calendar.jsx"],"sourcesContent":["// // src/pages/Slide6_Calendar.jsx\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Box, Text, Button } from '@chakra-ui/react';\r\n// import { Line } from 'react-chartjs-2';\r\n// import axios from 'axios';\r\n// import PageTransition from '../components/PageTransition';\r\n\r\n// /*\r\n//   Example: stats.monthlyTrends = [12, 45, 32, 60, 70, 80, 66, 90, 110, 95, 43, 22]\r\n//   representing Jan - Dec\r\n// */\r\n\r\n// function Slide6_Calendar() {\r\n//   const [stats, setStats] = useState(null);\r\n//   const [quip, setQuip] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchDataAndQuip = async () => {\r\n//       try {\r\n//         const statsRes = await axios.get('/api/stats/me');\r\n//         const userStats = Array.isArray(statsRes.data)\r\n//           ? statsRes.data[0]\r\n//           : statsRes.data;\r\n//         setStats(userStats);\r\n\r\n//         const quipRes = await axios.post('/api/generate-quip', {\r\n//           statDescription: 'Your month-by-month listening trends.',\r\n//         });\r\n//         setQuip(quipRes.data.quip);\r\n//       } catch (err) {\r\n//         setError('Failed to load monthly trends or quip.');\r\n//       }\r\n//     };\r\n//     fetchDataAndQuip();\r\n//   }, []);\r\n\r\n//   const nextSlide = () => (window.location.href = '/slide7');\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text color=\"red.300\">{error}</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   if (!stats) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text>Loading monthly data...</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n//   const data = {\r\n//     labels: months,\r\n//     datasets: [\r\n//       {\r\n//         label: 'Streams',\r\n//         data: stats.monthlyTrends,\r\n//         borderColor: '#1DB954',\r\n//         backgroundColor: 'rgba(29, 185, 84, 0.3)',\r\n//         fill: true,\r\n//         tension: 0.2,\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   return (\r\n//     <PageTransition>\r\n//       <Box\r\n//         minH=\"100vh\"\r\n//         display=\"flex\"\r\n//         flexDirection=\"column\"\r\n//         alignItems=\"center\"\r\n//         justifyContent=\"center\"\r\n//         px={4}\r\n//       >\r\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\r\n//           Month-by-Month Trends\r\n//         </Text>\r\n//         <Box width={['90%', '70%', '50%']} mb={6}>\r\n//           <Line data={data} />\r\n//         </Box>\r\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mb={4}>\r\n//           {quip}\r\n//         </Text>\r\n//         <Button\r\n//           bg=\"spotify.green\"\r\n//           color=\"spotify.black\"\r\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\r\n//           onClick={nextSlide}\r\n//         >\r\n//           Next\r\n//         </Button>\r\n//       </Box>\r\n//     </PageTransition>\r\n//   );\r\n// }\r\n\r\n// export default Slide6_Calendar;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport PageTransition from '../components/PageTransition';\r\nimport Navigation from '../components/Navigation';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nfunction Slide6_Calendar() {\r\n  const [stats, setStats] = useState(null);\r\n  const [quip, setQuip] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchDataAndQuip = async () => {\r\n      try {\r\n        const statsRes = await fetch('/api/stats/me');\r\n        const userStats = await statsRes.json();\r\n        const stats = Array.isArray(userStats) ? userStats[0] : userStats;\r\n        setStats(stats);\r\n\r\n        const quipRes = await fetch('/api/generate-quip', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            statDescription: 'Your month-by-month listening trends.',\r\n          }),\r\n        });\r\n        const quipData = await quipRes.json();\r\n        setQuip(quipData.quip);\r\n      } catch (err) {\r\n        setError('Failed to load monthly trends or quip.');\r\n      }\r\n    };\r\n    fetchDataAndQuip();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return (\r\n      <PageTransition title=\"Error\">\r\n        <p className=\"text-red-400\">{error}</p>\r\n      </PageTransition>\r\n    );\r\n  }\r\n\r\n  if (!stats) {\r\n    return (\r\n      <PageTransition title=\"Loading\">\r\n        <p>Loading monthly data...</p>\r\n      </PageTransition>\r\n    );\r\n  }\r\n\r\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n  const data = {\r\n    labels: months,\r\n    datasets: [\r\n      {\r\n        label: 'Streams',\r\n        data: stats.monthlyTrends,\r\n        borderColor: '#1DB954',\r\n        backgroundColor: 'rgba(29, 185, 84, 0.3)',\r\n        fill: true,\r\n        tension: 0.2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <PageTransition title=\"Month-by-Month Trends\">\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen px-4\">\r\n        <div className=\"w-full max-w-[90%] md:max-w-[70%] lg:max-w-[50%] mb-6\">\r\n          <Line data={data} />\r\n        </div>\r\n        <p className=\"text-spotify-green italic text-center mb-4\">\r\n          {quip}\r\n        </p>\r\n      </div>\r\n      <Navigation currentSlide={6} />\r\n    </PageTransition>\r\n  );\r\n}\r\n\r\nexport default Slide6_Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}