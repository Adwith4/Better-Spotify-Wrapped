{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwit\\\\Better-Spotify-Wrapped\\\\client\\\\src\\\\pages\\\\Slide4_Genres.jsx\",\n  _s = $RefreshSig$();\n// // src/pages/Slide4_Genres.jsx\n// import React, { useEffect, useState } from 'react';\n// import { Box, Text, Button } from '@chakra-ui/react';\n// import axios from 'axios';\n// import { Pie } from 'react-chartjs-2';\n// import PageTransition from '../components/PageTransition';\n\n// function Slide4_Genres() {\n//   const [stats, setStats] = useState(null);\n//   const [quip, setQuip] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchGenresAndQuip = async () => {\n//       try {\n//         const statsRes = await axios.get('/api/stats/me');\n//         const userStats = Array.isArray(statsRes.data)\n//           ? statsRes.data[0]\n//           : statsRes.data;\n//         setStats(userStats);\n\n//         const quipRes = await axios.post('/api/generate-quip', {\n//           statDescription: `Your top genres are ${userStats.topGenres.join(', ')}`,\n//         });\n//         setQuip(quipRes.data.quip);\n//       } catch (err) {\n//         setError('Failed to load top genres or quip.');\n//       }\n//     };\n//     fetchGenresAndQuip();\n//   }, []);\n\n//   const nextSlide = () => (window.location.href = '/slide5');\n\n//   if (error) {\n//     return (\n//       <PageTransition>\n//         <Text color=\"red.400\">{error}</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   if (!stats) {\n//     return (\n//       <PageTransition>\n//         <Text>Loading genres...</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   const genreCount = stats.topGenres.length;\n//   const chartData = {\n//     labels: stats.topGenres,\n//     datasets: [\n//       {\n//         data: stats.topGenres.map(() => Math.floor(Math.random() * 100)),\n//         backgroundColor: Array(genreCount).fill('#1DB954'),\n//       },\n//     ],\n//   };\n\n//   return (\n//     <PageTransition>\n//       <Box\n//         minH=\"100vh\"\n//         display=\"flex\"\n//         flexDirection=\"column\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//         px={4}\n//       >\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\n//           Your Top Genres\n//         </Text>\n//         <Box width={['90%', '70%', '40%']} mb={6}>\n//           <Pie data={chartData} />\n//         </Box>\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mb={4}>\n//           {quip}\n//         </Text>\n//         <Button\n//           bg=\"spotify.green\"\n//           color=\"spotify.black\"\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\n//           onClick={nextSlide}\n//         >\n//           Next\n//         </Button>\n//       </Box>\n//     </PageTransition>\n//   );\n// }\n\n// export default Slide4_Genres;\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport PageTransition from '../components/PageTransition';\nimport Navigation from '../components/Navigation';\nimport { useSpotifyData } from '../context/SpotifyDataContext';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nfunction Slide4_Genres() {\n  _s();\n  var _spotifyData$topGenre, _spotifyData$topGenre2, _spotifyData$topGenre3;\n  const {\n    spotifyData,\n    quip,\n    error,\n    isLoading\n  } = useSpotifyData();\n  const chartData = {\n    labels: spotifyData.topGenres,\n    datasets: [{\n      data: (_spotifyData$topGenre = spotifyData.topGenres) === null || _spotifyData$topGenre === void 0 ? void 0 : _spotifyData$topGenre.map(() => Math.floor(Math.random() * 100)),\n      backgroundColor: Array((_spotifyData$topGenre2 = spotifyData.topGenres) === null || _spotifyData$topGenre2 === void 0 ? void 0 : _spotifyData$topGenre2.length).fill('#1DB954'),\n      borderColor: Array((_spotifyData$topGenre3 = spotifyData.topGenres) === null || _spotifyData$topGenre3 === void 0 ? void 0 : _spotifyData$topGenre3.length).fill('#191414'),\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    plugins: {\n      legend: {\n        labels: {\n          color: '#FFFFFF'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PageTransition, {\n    title: \"Your Top Genres\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen px-4\",\n      children: [error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-400\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading genres...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        className: \"w-full max-w-4xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full max-w-[90%] md:max-w-[70%] lg:max-w-[40%] mx-auto mb-6\",\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-spotify-green italic text-center\",\n          children: quip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        currentSlide: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(Slide4_Genres, \"n/UQ7uPFn5UecA+xjNSWSLFM4pg=\", false, function () {\n  return [useSpotifyData];\n});\n_c = Slide4_Genres;\nexport default Slide4_Genres;\nvar _c;\n$RefreshReg$(_c, \"Slide4_Genres\");","map":{"version":3,"names":["React","motion","PageTransition","Navigation","useSpotifyData","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","jsxDEV","_jsxDEV","register","Slide4_Genres","_s","_spotifyData$topGenre","_spotifyData$topGenre2","_spotifyData$topGenre3","spotifyData","quip","error","isLoading","chartData","labels","topGenres","datasets","data","map","Math","floor","random","backgroundColor","Array","length","fill","borderColor","borderWidth","chartOptions","plugins","legend","color","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","animate","options","currentSlide","_c","$RefreshReg$"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/pages/Slide4_Genres.jsx"],"sourcesContent":["// // src/pages/Slide4_Genres.jsx\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Box, Text, Button } from '@chakra-ui/react';\r\n// import axios from 'axios';\r\n// import { Pie } from 'react-chartjs-2';\r\n// import PageTransition from '../components/PageTransition';\r\n\r\n// function Slide4_Genres() {\r\n//   const [stats, setStats] = useState(null);\r\n//   const [quip, setQuip] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchGenresAndQuip = async () => {\r\n//       try {\r\n//         const statsRes = await axios.get('/api/stats/me');\r\n//         const userStats = Array.isArray(statsRes.data)\r\n//           ? statsRes.data[0]\r\n//           : statsRes.data;\r\n//         setStats(userStats);\r\n\r\n//         const quipRes = await axios.post('/api/generate-quip', {\r\n//           statDescription: `Your top genres are ${userStats.topGenres.join(', ')}`,\r\n//         });\r\n//         setQuip(quipRes.data.quip);\r\n//       } catch (err) {\r\n//         setError('Failed to load top genres or quip.');\r\n//       }\r\n//     };\r\n//     fetchGenresAndQuip();\r\n//   }, []);\r\n\r\n//   const nextSlide = () => (window.location.href = '/slide5');\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text color=\"red.400\">{error}</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   if (!stats) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text>Loading genres...</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   const genreCount = stats.topGenres.length;\r\n//   const chartData = {\r\n//     labels: stats.topGenres,\r\n//     datasets: [\r\n//       {\r\n//         data: stats.topGenres.map(() => Math.floor(Math.random() * 100)),\r\n//         backgroundColor: Array(genreCount).fill('#1DB954'),\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   return (\r\n//     <PageTransition>\r\n//       <Box\r\n//         minH=\"100vh\"\r\n//         display=\"flex\"\r\n//         flexDirection=\"column\"\r\n//         alignItems=\"center\"\r\n//         justifyContent=\"center\"\r\n//         px={4}\r\n//       >\r\n//         <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\r\n//           Your Top Genres\r\n//         </Text>\r\n//         <Box width={['90%', '70%', '40%']} mb={6}>\r\n//           <Pie data={chartData} />\r\n//         </Box>\r\n//         <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mb={4}>\r\n//           {quip}\r\n//         </Text>\r\n//         <Button\r\n//           bg=\"spotify.green\"\r\n//           color=\"spotify.black\"\r\n//           _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\r\n//           onClick={nextSlide}\r\n//         >\r\n//           Next\r\n//         </Button>\r\n//       </Box>\r\n//     </PageTransition>\r\n//   );\r\n// }\r\n\r\n// export default Slide4_Genres;\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport PageTransition from '../components/PageTransition';\r\nimport Navigation from '../components/Navigation';\r\nimport { useSpotifyData } from '../context/SpotifyDataContext';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\n// Register Chart.js components\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nfunction Slide4_Genres() {\r\n  const { spotifyData, quip, error, isLoading } = useSpotifyData();\r\n\r\n  const chartData = {\r\n    labels: spotifyData.topGenres,\r\n    datasets: [{\r\n      data: spotifyData.topGenres?.map(() => Math.floor(Math.random() * 100)),\r\n      backgroundColor: Array(spotifyData.topGenres?.length).fill('#1DB954'),\r\n      borderColor: Array(spotifyData.topGenres?.length).fill('#191414'),\r\n      borderWidth: 1\r\n    }]\r\n  };\r\n\r\n  const chartOptions = {\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: '#FFFFFF'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageTransition title=\"Your Top Genres\">\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen px-4\">\r\n        {error ? (\r\n          <p className=\"text-red-400\">{error}</p>\r\n        ) : isLoading ? (\r\n          <p>Loading genres...</p>\r\n        ) : (\r\n          <motion.div \r\n            initial={{ opacity: 0 }} \r\n            animate={{ opacity: 1 }}\r\n            className=\"w-full max-w-4xl\"\r\n          >\r\n            <div className=\"w-full max-w-[90%] md:max-w-[70%] lg:max-w-[40%] mx-auto mb-6\">\r\n              <Pie data={chartData} options={chartOptions} />\r\n            </div>\r\n            <p className=\"text-spotify-green italic text-center\">{quip}</p>\r\n          </motion.div>\r\n        )}\r\n        <Navigation currentSlide={4} />\r\n      </div>\r\n    </PageTransition>\r\n  );\r\n}\r\n\r\nexport default Slide4_Genres;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}