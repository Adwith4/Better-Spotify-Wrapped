{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwit\\\\Better-Spotify-Wrapped\\\\client\\\\src\\\\pages\\\\Slide1_Artists.jsx\",\n  _s = $RefreshSig$();\n// // src/pages/Slide1_Artists.jsx\n// import React, { useEffect, useState } from 'react';\n// import { Box, Text, Button, VStack, List, ListItem } from '@chakra-ui/react';\n// import axios from 'axios';\n// import PageTransition from '../components/PageTransition';\n\n// function Slide1_Artists() {\n//   const [stats, setStats] = useState(null);\n//   const [quip, setQuip] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchDataAndQuip = async () => {\n//       try {\n//         // 1) Get stats\n//         const statsRes = await axios.get('/api/stats/me');\n//         const userStats = Array.isArray(statsRes.data)\n//           ? statsRes.data[0]\n//           : statsRes.data;\n//         setStats(userStats);\n\n//         // 2) Generate quip\n//         const quipRes = await axios.post('/api/generate-quip', {\n//           statDescription: `Your top artists are: ${userStats.topArtists.join(', ')}`,\n//         });\n//         setQuip(quipRes.data.quip);\n//       } catch (err) {\n//         setError('Could not fetch artists or generate quip.');\n//       }\n//     };\n//     fetchDataAndQuip();\n//   }, []);\n\n//   const nextSlide = () => (window.location.href = '/slide2');\n\n//   if (error) {\n//     return (\n//       <PageTransition>\n//         <Text color=\"red.300\">{error}</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   if (!stats) {\n//     return (\n//       <PageTransition>\n//         <Text>Loading...</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   return (\n//     <PageTransition>\n//       <Box\n//         minH=\"100vh\"\n//         display=\"flex\"\n//         flexDirection=\"column\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//         px={4}\n//       >\n//         <VStack spacing={4}>\n//           <Text fontSize=\"3xl\" fontWeight=\"bold\">\n//             Your Top Artists\n//           </Text>\n//           <List spacing={2}>\n//             {stats.topArtists.map((artist) => (\n//               <ListItem key={artist}>{artist}</ListItem>\n//             ))}\n//           </List>\n//           <Text fontStyle=\"italic\" color=\"spotify.green\" textAlign=\"center\">\n//             {quip}\n//           </Text>\n//           <Button\n//             onClick={nextSlide}\n//             bg=\"spotify.green\"\n//             color=\"spotify.black\"\n//             _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\n//           >\n//             Next\n//           </Button>\n//         </VStack>\n//       </Box>\n//     </PageTransition>\n//   );\n// }\n\n// export default Slide1_Artists;\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport PageTransition from '../components/PageTransition';\nimport Navigation from '../components/Navigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slide1_Artists() {\n  _s();\n  const [stats, setStats] = useState(null);\n  const [quip, setQuip] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchDataAndQuip = async () => {\n      try {\n        // First fetch Spotify data\n        const spotifyDataRes = await fetch('/api/fetch-spotify-data', {\n          credentials: 'include'\n        });\n        const spotifyData = await spotifyDataRes.json();\n        setStats(spotifyData);\n\n        // Then generate quip based on the data\n        const quipRes = await fetch('/api/generate-quip', {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            statDescription: `Your top artists are: ${spotifyData.topArtists.join(', ')}`\n          })\n        });\n        const quipData = await quipRes.json();\n        setQuip(quipData.quip);\n      } catch (err) {\n        setError('Could not fetch artists or generate quip.');\n      }\n    };\n    fetchDataAndQuip();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PageTransition, {\n    title: \"Your Top Artists\",\n    children: [error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-400\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : !stats ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-2\",\n          children: stats.topArtists.map(artist => /*#__PURE__*/_jsxDEV(motion.li, {\n            initial: {\n              opacity: 0,\n              y: 20\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            className: \"text-center\",\n            children: artist\n          }, artist, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"italic text-spotify-green text-center\",\n          children: quip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      currentSlide: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(Slide1_Artists, \"nDOaKaLQcQBTIbzQGXQ/RwTgZqo=\");\n_c = Slide1_Artists;\nexport default Slide1_Artists;\nvar _c;\n$RefreshReg$(_c, \"Slide1_Artists\");","map":{"version":3,"names":["React","useEffect","useState","motion","PageTransition","Navigation","jsxDEV","_jsxDEV","Slide1_Artists","_s","stats","setStats","quip","setQuip","error","setError","fetchDataAndQuip","spotifyDataRes","fetch","credentials","spotifyData","json","quipRes","method","headers","body","JSON","stringify","statDescription","topArtists","join","quipData","err","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","artist","li","initial","opacity","y","animate","currentSlide","_c","$RefreshReg$"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/pages/Slide1_Artists.jsx"],"sourcesContent":["// // src/pages/Slide1_Artists.jsx\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Box, Text, Button, VStack, List, ListItem } from '@chakra-ui/react';\r\n// import axios from 'axios';\r\n// import PageTransition from '../components/PageTransition';\r\n\r\n// function Slide1_Artists() {\r\n//   const [stats, setStats] = useState(null);\r\n//   const [quip, setQuip] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchDataAndQuip = async () => {\r\n//       try {\r\n//         // 1) Get stats\r\n//         const statsRes = await axios.get('/api/stats/me');\r\n//         const userStats = Array.isArray(statsRes.data)\r\n//           ? statsRes.data[0]\r\n//           : statsRes.data;\r\n//         setStats(userStats);\r\n\r\n//         // 2) Generate quip\r\n//         const quipRes = await axios.post('/api/generate-quip', {\r\n//           statDescription: `Your top artists are: ${userStats.topArtists.join(', ')}`,\r\n//         });\r\n//         setQuip(quipRes.data.quip);\r\n//       } catch (err) {\r\n//         setError('Could not fetch artists or generate quip.');\r\n//       }\r\n//     };\r\n//     fetchDataAndQuip();\r\n//   }, []);\r\n\r\n//   const nextSlide = () => (window.location.href = '/slide2');\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text color=\"red.300\">{error}</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   if (!stats) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text>Loading...</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <PageTransition>\r\n//       <Box\r\n//         minH=\"100vh\"\r\n//         display=\"flex\"\r\n//         flexDirection=\"column\"\r\n//         alignItems=\"center\"\r\n//         justifyContent=\"center\"\r\n//         px={4}\r\n//       >\r\n//         <VStack spacing={4}>\r\n//           <Text fontSize=\"3xl\" fontWeight=\"bold\">\r\n//             Your Top Artists\r\n//           </Text>\r\n//           <List spacing={2}>\r\n//             {stats.topArtists.map((artist) => (\r\n//               <ListItem key={artist}>{artist}</ListItem>\r\n//             ))}\r\n//           </List>\r\n//           <Text fontStyle=\"italic\" color=\"spotify.green\" textAlign=\"center\">\r\n//             {quip}\r\n//           </Text>\r\n//           <Button\r\n//             onClick={nextSlide}\r\n//             bg=\"spotify.green\"\r\n//             color=\"spotify.black\"\r\n//             _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\r\n//           >\r\n//             Next\r\n//           </Button>\r\n//         </VStack>\r\n//       </Box>\r\n//     </PageTransition>\r\n//   );\r\n// }\r\n\r\n// export default Slide1_Artists;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport PageTransition from '../components/PageTransition';\r\nimport Navigation from '../components/Navigation';\r\n\r\nfunction Slide1_Artists() {\r\n  const [stats, setStats] = useState(null);\r\n  const [quip, setQuip] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchDataAndQuip = async () => {\r\n      try {\r\n        // First fetch Spotify data\r\n        const spotifyDataRes = await fetch('/api/fetch-spotify-data', {\r\n          credentials: 'include'\r\n        });\r\n        const spotifyData = await spotifyDataRes.json();\r\n        setStats(spotifyData);\r\n\r\n        // Then generate quip based on the data\r\n        const quipRes = await fetch('/api/generate-quip', {\r\n          method: 'POST',\r\n          credentials: 'include',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            statDescription: `Your top artists are: ${spotifyData.topArtists.join(', ')}`,\r\n          }),\r\n        });\r\n        const quipData = await quipRes.json();\r\n        setQuip(quipData.quip);\r\n      } catch (err) {\r\n        setError('Could not fetch artists or generate quip.');\r\n      }\r\n    };\r\n    fetchDataAndQuip();\r\n  }, []);\r\n\r\n  return (\r\n    <PageTransition title=\"Your Top Artists\">\r\n      {error ? (\r\n        <p className=\"text-red-400\">{error}</p>\r\n      ) : !stats ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen px-4\">\r\n          <div className=\"space-y-4\">\r\n            <ul className=\"space-y-2\">\r\n              {stats.topArtists.map((artist) => (\r\n                <motion.li\r\n                  key={artist}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"text-center\"\r\n                >\r\n                  {artist}\r\n                </motion.li>\r\n              ))}\r\n            </ul>\r\n            <p className=\"italic text-spotify-green text-center\">\r\n              {quip}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Navigation currentSlide={1} />\r\n    </PageTransition>\r\n  );\r\n}\r\n\r\nexport default Slide1_Artists;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}