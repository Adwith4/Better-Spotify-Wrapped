{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwit\\\\Better-Spotify-Wrapped\\\\client\\\\src\\\\pages\\\\Slide1_Artists.jsx\",\n  _s = $RefreshSig$();\n// // src/pages/Slide1_Artists.jsx\n// import React, { useEffect, useState } from 'react';\n// import { Box, Text, Button, VStack, List, ListItem } from '@chakra-ui/react';\n// import axios from 'axios';\n// import PageTransition from '../components/PageTransition';\n\n// function Slide1_Artists() {\n//   const [stats, setStats] = useState(null);\n//   const [quip, setQuip] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchDataAndQuip = async () => {\n//       try {\n//         // 1) Get stats\n//         const statsRes = await axios.get('/api/stats/me');\n//         const userStats = Array.isArray(statsRes.data)\n//           ? statsRes.data[0]\n//           : statsRes.data;\n//         setStats(userStats);\n\n//         // 2) Generate quip\n//         const quipRes = await axios.post('/api/generate-quip', {\n//           statDescription: `Your top artists are: ${userStats.topArtists.join(', ')}`,\n//         });\n//         setQuip(quipRes.data.quip);\n//       } catch (err) {\n//         setError('Could not fetch artists or generate quip.');\n//       }\n//     };\n//     fetchDataAndQuip();\n//   }, []);\n\n//   const nextSlide = () => (window.location.href = '/slide2');\n\n//   if (error) {\n//     return (\n//       <PageTransition>\n//         <Text color=\"red.300\">{error}</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   if (!stats) {\n//     return (\n//       <PageTransition>\n//         <Text>Loading...</Text>\n//       </PageTransition>\n//     );\n//   }\n\n//   return (\n//     <PageTransition>\n//       <Box\n//         minH=\"100vh\"\n//         display=\"flex\"\n//         flexDirection=\"column\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//         px={4}\n//       >\n//         <VStack spacing={4}>\n//           <Text fontSize=\"3xl\" fontWeight=\"bold\">\n//             Your Top Artists\n//           </Text>\n//           <List spacing={2}>\n//             {stats.topArtists.map((artist) => (\n//               <ListItem key={artist}>{artist}</ListItem>\n//             ))}\n//           </List>\n//           <Text fontStyle=\"italic\" color=\"spotify.green\" textAlign=\"center\">\n//             {quip}\n//           </Text>\n//           <Button\n//             onClick={nextSlide}\n//             bg=\"spotify.green\"\n//             color=\"spotify.black\"\n//             _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\n//           >\n//             Next\n//           </Button>\n//         </VStack>\n//       </Box>\n//     </PageTransition>\n//   );\n// }\n\n// export default Slide1_Artists;\n\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport PageTransition from '../components/PageTransition';\nimport Navigation from '../components/Navigation';\nimport { fetchSpotifyDataWithQuip } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slide1_Artists() {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchSpotifyDataWithQuip();\n        setData(response);\n      } catch (err) {\n        setError('Could not fetch artists or generate quip.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PageTransition, {\n    title: \"Your Top Artists\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col items-center justify-center px-4 bg-gradient-to-b from-spotify-black to-black\",\n      children: [error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-400\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-spotify-white\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        className: \"space-y-8 w-full max-w-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-4\",\n          children: data.stats.topArtists.map((artist, index) => /*#__PURE__*/_jsxDEV(motion.li, {\n            initial: {\n              opacity: 0,\n              x: -20\n            },\n            animate: {\n              opacity: 1,\n              x: 0\n            },\n            transition: {\n              delay: index * 0.1\n            },\n            className: \"bg-spotify-gray/20 p-4 rounded-lg flex items-center space-x-4\",\n            children: [artist.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: artist.imageUrl,\n              alt: artist.name,\n              className: \"w-16 h-16 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-spotify-white text-lg font-bold\",\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this)]\n          }, artist.id || `artist-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-spotify-green italic text-center text-lg\",\n          children: data.quip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        currentSlide: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(Slide1_Artists, \"VWhJwh8KgJLtNl4iUER9KlHbBqE=\");\n_c = Slide1_Artists;\nexport default Slide1_Artists;\nvar _c;\n$RefreshReg$(_c, \"Slide1_Artists\");","map":{"version":3,"names":["React","useEffect","useState","motion","PageTransition","Navigation","fetchSpotifyDataWithQuip","jsxDEV","_jsxDEV","Slide1_Artists","_s","data","setData","error","setError","isLoading","setIsLoading","fetchData","response","err","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","animate","stats","topArtists","map","artist","index","li","x","transition","delay","imageUrl","src","alt","name","id","quip","currentSlide","_c","$RefreshReg$"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/pages/Slide1_Artists.jsx"],"sourcesContent":["// // src/pages/Slide1_Artists.jsx\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Box, Text, Button, VStack, List, ListItem } from '@chakra-ui/react';\r\n// import axios from 'axios';\r\n// import PageTransition from '../components/PageTransition';\r\n\r\n// function Slide1_Artists() {\r\n//   const [stats, setStats] = useState(null);\r\n//   const [quip, setQuip] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchDataAndQuip = async () => {\r\n//       try {\r\n//         // 1) Get stats\r\n//         const statsRes = await axios.get('/api/stats/me');\r\n//         const userStats = Array.isArray(statsRes.data)\r\n//           ? statsRes.data[0]\r\n//           : statsRes.data;\r\n//         setStats(userStats);\r\n\r\n//         // 2) Generate quip\r\n//         const quipRes = await axios.post('/api/generate-quip', {\r\n//           statDescription: `Your top artists are: ${userStats.topArtists.join(', ')}`,\r\n//         });\r\n//         setQuip(quipRes.data.quip);\r\n//       } catch (err) {\r\n//         setError('Could not fetch artists or generate quip.');\r\n//       }\r\n//     };\r\n//     fetchDataAndQuip();\r\n//   }, []);\r\n\r\n//   const nextSlide = () => (window.location.href = '/slide2');\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text color=\"red.300\">{error}</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   if (!stats) {\r\n//     return (\r\n//       <PageTransition>\r\n//         <Text>Loading...</Text>\r\n//       </PageTransition>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <PageTransition>\r\n//       <Box\r\n//         minH=\"100vh\"\r\n//         display=\"flex\"\r\n//         flexDirection=\"column\"\r\n//         alignItems=\"center\"\r\n//         justifyContent=\"center\"\r\n//         px={4}\r\n//       >\r\n//         <VStack spacing={4}>\r\n//           <Text fontSize=\"3xl\" fontWeight=\"bold\">\r\n//             Your Top Artists\r\n//           </Text>\r\n//           <List spacing={2}>\r\n//             {stats.topArtists.map((artist) => (\r\n//               <ListItem key={artist}>{artist}</ListItem>\r\n//             ))}\r\n//           </List>\r\n//           <Text fontStyle=\"italic\" color=\"spotify.green\" textAlign=\"center\">\r\n//             {quip}\r\n//           </Text>\r\n//           <Button\r\n//             onClick={nextSlide}\r\n//             bg=\"spotify.green\"\r\n//             color=\"spotify.black\"\r\n//             _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\r\n//           >\r\n//             Next\r\n//           </Button>\r\n//         </VStack>\r\n//       </Box>\r\n//     </PageTransition>\r\n//   );\r\n// }\r\n\r\n// export default Slide1_Artists;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport PageTransition from '../components/PageTransition';\r\nimport Navigation from '../components/Navigation';\r\nimport { fetchSpotifyDataWithQuip } from '../utils/api';\r\n\r\nfunction Slide1_Artists() {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetchSpotifyDataWithQuip();\r\n        setData(response);\r\n      } catch (err) {\r\n        setError('Could not fetch artists or generate quip.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <PageTransition title=\"Your Top Artists\">\r\n      <div className=\"min-h-screen flex flex-col items-center justify-center px-4 bg-gradient-to-b from-spotify-black to-black\">\r\n        {error ? (\r\n          <p className=\"text-red-400\">{error}</p>\r\n        ) : isLoading ? (\r\n          <p className=\"text-spotify-white\">Loading...</p>\r\n        ) : (\r\n          <motion.div \r\n            initial={{ opacity: 0 }} \r\n            animate={{ opacity: 1 }}\r\n            className=\"space-y-8 w-full max-w-2xl\"\r\n          >\r\n            <ul className=\"space-y-4\">\r\n              {data.stats.topArtists.map((artist, index) => (\r\n                <motion.li\r\n                  key={artist.id || `artist-${index}`}\r\n                  initial={{ opacity: 0, x: -20 }}\r\n                  animate={{ opacity: 1, x: 0 }}\r\n                  transition={{ delay: index * 0.1 }}\r\n                  className=\"bg-spotify-gray/20 p-4 rounded-lg flex items-center space-x-4\"\r\n                >\r\n                  {artist.imageUrl && (\r\n                    <img \r\n                      src={artist.imageUrl} \r\n                      alt={artist.name}\r\n                      className=\"w-16 h-16 rounded-full\"\r\n                    />\r\n                  )}\r\n                  <span className=\"text-spotify-white text-lg font-bold\">\r\n                    {artist.name}\r\n                  </span>\r\n                </motion.li>\r\n              ))}\r\n            </ul>\r\n            <p className=\"text-spotify-green italic text-center text-lg\">\r\n              {data.quip}\r\n            </p>\r\n          </motion.div>\r\n        )}\r\n        <Navigation currentSlide={1} />\r\n      </div>\r\n    </PageTransition>\r\n  );\r\n}\r\n\r\nexport default Slide1_Artists;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}