{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwit\\\\Better-Spotify-Wrapped\\\\client\\\\src\\\\context\\\\SpotifyDataContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { fetchSpotifyDataWithQuip } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyDataContext = /*#__PURE__*/createContext(null);\nexport const SpotifyDataProvider = ({\n  children\n}) => {\n  _s();\n  const [spotifyData, setSpotifyData] = useState(null);\n  const [quip, setQuip] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchSpotifyDataWithQuip();\n        setSpotifyData(data.stats);\n        setQuip(data.quip);\n      } catch (err) {\n        var _err$response;\n        if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 429) {\n          setError('Too many requests. Please try again later.');\n        } else {\n          setError(err.message || 'An error occurred while fetching data');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const updateQuip = async statDescription => {\n    try {\n      const data = await fetchSpotifyDataWithQuip(statDescription);\n      setQuip(data.quip);\n    } catch (err) {\n      setError(err.message || 'An error occurred while updating quip');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SpotifyDataContext.Provider, {\n    value: {\n      spotifyData,\n      quip,\n      error,\n      isLoading,\n      updateQuip\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyDataProvider, \"MKs25xzHC6H8ixRBJHGJLkBrV+k=\");\n_c = SpotifyDataProvider;\nexport const useSpotifyData = () => {\n  _s2();\n  const context = useContext(SpotifyDataContext);\n  if (!context) {\n    throw new Error('useSpotifyData must be used within a SpotifyDataProvider');\n  }\n  return context;\n};\n_s2(useSpotifyData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SpotifyDataProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","fetchSpotifyDataWithQuip","jsxDEV","_jsxDEV","SpotifyDataContext","SpotifyDataProvider","children","_s","spotifyData","setSpotifyData","quip","setQuip","error","setError","isLoading","setIsLoading","fetchData","data","stats","err","_err$response","response","status","message","updateQuip","statDescription","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSpotifyData","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/context/SpotifyDataContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\nimport { fetchSpotifyDataWithQuip } from '../utils/api';\r\n\r\nconst SpotifyDataContext = createContext(null);\r\n\r\nexport const SpotifyDataProvider = ({ children }) => {\r\n  const [spotifyData, setSpotifyData] = useState(null);\r\n  const [quip, setQuip] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n            const data = await fetchSpotifyDataWithQuip();\r\n            setSpotifyData(data.stats);\r\n            setQuip(data.quip);\r\n        } catch (err) {\r\n            if (err.response?.status === 429) {\r\n                setError('Too many requests. Please try again later.');\r\n            } else {\r\n                setError(err.message || 'An error occurred while fetching data');\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    fetchData();\r\n}, []);\r\n\r\n  const updateQuip = async (statDescription) => {\r\n    try {\r\n      const data = await fetchSpotifyDataWithQuip(statDescription);\r\n      setQuip(data.quip);\r\n    } catch (err) {\r\n      setError(err.message || 'An error occurred while updating quip');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SpotifyDataContext.Provider value={{ \r\n      spotifyData, \r\n      quip, \r\n      error, \r\n      isLoading,\r\n      updateQuip \r\n    }}>\r\n      {children}\r\n    </SpotifyDataContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSpotifyData = () => {\r\n  const context = useContext(SpotifyDataContext);\r\n  if (!context) {\r\n    throw new Error('useSpotifyData must be used within a SpotifyDataProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtE,SAASC,wBAAwB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,kBAAkB,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMQ,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMhB,wBAAwB,CAAC,CAAC;QAC7CQ,cAAc,CAACQ,IAAI,CAACC,KAAK,CAAC;QAC1BP,OAAO,CAACM,IAAI,CAACP,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOS,GAAG,EAAE;QAAA,IAAAC,aAAA;QACV,IAAI,EAAAA,aAAA,GAAAD,GAAG,CAACE,QAAQ,cAAAD,aAAA,uBAAZA,aAAA,CAAcE,MAAM,MAAK,GAAG,EAAE;UAC9BT,QAAQ,CAAC,4CAA4C,CAAC;QAC1D,CAAC,MAAM;UACHA,QAAQ,CAACM,GAAG,CAACI,OAAO,IAAI,uCAAuC,CAAC;QACpE;MACJ,CAAC,SAAS;QACNR,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEJ,MAAMQ,UAAU,GAAG,MAAOC,eAAe,IAAK;IAC5C,IAAI;MACF,MAAMR,IAAI,GAAG,MAAMhB,wBAAwB,CAACwB,eAAe,CAAC;MAC5Dd,OAAO,CAACM,IAAI,CAACP,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZN,QAAQ,CAACM,GAAG,CAACI,OAAO,IAAI,uCAAuC,CAAC;IAClE;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,kBAAkB,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAClCnB,WAAW;MACXE,IAAI;MACJE,KAAK;MACLE,SAAS;MACTU;IACF,CAAE;IAAAlB,QAAA,EACCA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAElC,CAAC;AAACxB,EAAA,CA9CWF,mBAAmB;AAAA2B,EAAA,GAAnB3B,mBAAmB;AAgDhC,OAAO,MAAM4B,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,MAAMC,OAAO,GAAGrC,UAAU,CAACM,kBAAkB,CAAC;EAC9C,IAAI,CAAC+B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;EAC7E;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,cAAc;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}