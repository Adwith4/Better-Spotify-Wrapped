{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwit\\\\Better-Spotify-Wrapped\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { Box, Text, Button } from '@chakra-ui/react';\n// import axios from 'axios';\n\n// function Dashboard() {\n//   const [stats, setStats] = useState(null);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const res = await axios.get('/api/fetch-spotify-data', {\n//           withCredentials: true,\n//         });\n//         setStats(res.data);\n//       } catch (err) {\n//         setError('Failed to load your Spotify data.');\n//       }\n//     };\n//     fetchData();\n//   }, []);\n\n//   if (error) {\n//     return (\n//       <Box\n//         p={8}\n//         textAlign=\"center\"\n//         style={{\n//           opacity: 1,\n//           transition: 'opacity 0.5s'\n//         }}\n//       >\n//         <Text color=\"red.400\">{error}</Text>\n//         <Button onClick={() => (window.location.href = '/')}>Go Back</Button>\n//       </Box>\n//     );\n//   }\n\n//   if (!stats) {\n//     return <Text p={8}>Loading...</Text>;\n//   }\n\n//   return (\n//     <Box\n//       textAlign=\"center\"\n//       p={8}\n//       style={{\n//         opacity: 1,\n//         transition: 'opacity 0.5s'\n//       }}\n//     >\n//       <Text fontSize=\"2xl\" mb={6} fontWeight=\"bold\">\n//         Welcome to Your Better Spotify Wrapped\n//       </Text>\n//       <Text mb={4}>Hi there, {stats.displayName || 'Music Fan'}!</Text>\n//       <Button\n//         bg=\"spotify.green\"\n//         color=\"spotify.black\"\n//         size=\"lg\"\n//         _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\n//         onClick={() => (window.location.href = '/slide1')}\n//       >\n//         Start Slideshow\n//       </Button>\n//     </Box>\n//   );\n// }\n\n// export default Dashboard;\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Layout from '../components/Layout';\nimport { fetchUserProfile } from '../utils/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchUserProfile();\n        setUserData(data);\n      } catch (err) {\n        setError('Failed to load your Spotify data.');\n      }\n    };\n    fetchData();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-400 mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          className: \"spotify-button\",\n          onClick: () => navigate('/'),\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Welcome to Your Better Spotify Wrapped\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-8 text-xl\",\n        children: [\"Hi there, \", userData.displayName || 'Music Fan', \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n        whileHover: {\n          scale: 1.05\n        },\n        whileTap: {\n          scale: 0.95\n        },\n        className: \"spotify-button\",\n        onClick: () => navigate('/slide1'),\n        children: \"Start Slideshow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"tBoMtwAt70aGq7kMD1T1wAjngC0=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","motion","Layout","fetchUserProfile","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","userData","setUserData","error","setError","navigate","fetchData","data","err","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","button","whileHover","scale","whileTap","onClick","displayName","_c","$RefreshReg$"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/pages/Dashboard.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { Box, Text, Button } from '@chakra-ui/react';\r\n// import axios from 'axios';\r\n\r\n// function Dashboard() {\r\n//   const [stats, setStats] = useState(null);\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const res = await axios.get('/api/fetch-spotify-data', {\r\n//           withCredentials: true,\r\n//         });\r\n//         setStats(res.data);\r\n//       } catch (err) {\r\n//         setError('Failed to load your Spotify data.');\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <Box\r\n//         p={8}\r\n//         textAlign=\"center\"\r\n//         style={{\r\n//           opacity: 1,\r\n//           transition: 'opacity 0.5s'\r\n//         }}\r\n//       >\r\n//         <Text color=\"red.400\">{error}</Text>\r\n//         <Button onClick={() => (window.location.href = '/')}>Go Back</Button>\r\n//       </Box>\r\n//     );\r\n//   }\r\n\r\n//   if (!stats) {\r\n//     return <Text p={8}>Loading...</Text>;\r\n//   }\r\n\r\n//   return (\r\n//     <Box\r\n//       textAlign=\"center\"\r\n//       p={8}\r\n//       style={{\r\n//         opacity: 1,\r\n//         transition: 'opacity 0.5s'\r\n//       }}\r\n//     >\r\n//       <Text fontSize=\"2xl\" mb={6} fontWeight=\"bold\">\r\n//         Welcome to Your Better Spotify Wrapped\r\n//       </Text>\r\n//       <Text mb={4}>Hi there, {stats.displayName || 'Music Fan'}!</Text>\r\n//       <Button\r\n//         bg=\"spotify.green\"\r\n//         color=\"spotify.black\"\r\n//         size=\"lg\"\r\n//         _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\r\n//         onClick={() => (window.location.href = '/slide1')}\r\n//       >\r\n//         Start Slideshow\r\n//       </Button>\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport Layout from '../components/Layout';\r\nimport { fetchUserProfile } from '../utils/api';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Dashboard() {\r\n  const [userData, setUserData] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await fetchUserProfile();\r\n        setUserData(data);\r\n      } catch (err) {\r\n        setError('Failed to load your Spotify data.');\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return (\r\n      <Layout title=\"Error\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-red-400 mb-4\">{error}</p>\r\n          <motion.button\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n            className=\"spotify-button\"\r\n            onClick={() => navigate('/')}\r\n          >\r\n            Go Back\r\n          </motion.button>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  if (!userData) {\r\n    return <Layout title=\"Loading...\"></Layout>;\r\n  }\r\n\r\n  return (\r\n    <Layout title=\"Welcome to Your Better Spotify Wrapped\">\r\n      <div className=\"text-center\">\r\n        <p className=\"mb-8 text-xl\">Hi there, {userData.displayName || 'Music Fan'}!</p>\r\n        <motion.button\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n          className=\"spotify-button\"\r\n          onClick={() => navigate('/slide1')}\r\n        >\r\n          Start Slideshow\r\n        </motion.button>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}