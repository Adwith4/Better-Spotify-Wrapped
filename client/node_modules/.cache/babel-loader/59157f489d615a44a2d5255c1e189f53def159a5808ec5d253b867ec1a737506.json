{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwit\\\\Better-Spotify-Wrapped\\\\client\\\\src\\\\pages\\\\Slide6_Calendar.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Slide6_Calendar.jsx\nimport React, { useEffect, useState } from 'react';\nimport { Box, Text, Button } from '@chakra-ui/react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport PageTransition from '../components/PageTransition';\n\n/*\r\n  Example: stats.monthlyTrends = [12, 45, 32, 60, 70, 80, 66, 90, 110, 95, 43, 22]\r\n  representing Jan - Dec\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slide6_Calendar() {\n  _s();\n  const [stats, setStats] = useState(null);\n  const [quip, setQuip] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchDataAndQuip = async () => {\n      try {\n        const statsRes = await axios.get('/api/stats/me');\n        const userStats = Array.isArray(statsRes.data) ? statsRes.data[0] : statsRes.data;\n        setStats(userStats);\n        const quipRes = await axios.post('/api/generate-quip', {\n          statDescription: 'Your month-by-month listening trends.'\n        });\n        setQuip(quipRes.data.quip);\n      } catch (err) {\n        setError('Failed to load monthly trends or quip.');\n      }\n    };\n    fetchDataAndQuip();\n  }, []);\n  const nextSlide = () => window.location.href = '/slide7';\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(PageTransition, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        color: \"red.300\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(PageTransition, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Loading monthly data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const data = {\n    labels: months,\n    datasets: [{\n      label: 'Streams',\n      data: stats.monthlyTrends,\n      borderColor: '#1DB954',\n      backgroundColor: 'rgba(29, 185, 84, 0.3)',\n      fill: true,\n      tension: 0.2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(PageTransition, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      minH: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      px: 4,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"3xl\",\n        fontWeight: \"bold\",\n        mb: 6,\n        children: \"Month-by-Month Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: ['90%', '70%', '50%'],\n        mb: 6,\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"spotify.green\",\n        fontStyle: \"italic\",\n        textAlign: \"center\",\n        mb: 4,\n        children: quip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        bg: \"spotify.green\",\n        color: \"spotify.black\",\n        _hover: {\n          bg: 'green.400',\n          transform: 'scale(1.05)'\n        },\n        onClick: nextSlide,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Slide6_Calendar, \"nDOaKaLQcQBTIbzQGXQ/RwTgZqo=\");\n_c = Slide6_Calendar;\nexport default Slide6_Calendar;\nvar _c;\n$RefreshReg$(_c, \"Slide6_Calendar\");","map":{"version":3,"names":["React","useEffect","useState","Box","Text","Button","Line","axios","PageTransition","jsxDEV","_jsxDEV","Slide6_Calendar","_s","stats","setStats","quip","setQuip","error","setError","fetchDataAndQuip","statsRes","get","userStats","Array","isArray","data","quipRes","post","statDescription","err","nextSlide","window","location","href","children","color","fileName","_jsxFileName","lineNumber","columnNumber","months","labels","datasets","label","monthlyTrends","borderColor","backgroundColor","fill","tension","minH","display","flexDirection","alignItems","justifyContent","px","fontSize","fontWeight","mb","width","fontStyle","textAlign","bg","_hover","transform","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adwit/Better-Spotify-Wrapped/client/src/pages/Slide6_Calendar.jsx"],"sourcesContent":["// src/pages/Slide6_Calendar.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Box, Text, Button } from '@chakra-ui/react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport PageTransition from '../components/PageTransition';\r\n\r\n/*\r\n  Example: stats.monthlyTrends = [12, 45, 32, 60, 70, 80, 66, 90, 110, 95, 43, 22]\r\n  representing Jan - Dec\r\n*/\r\n\r\nfunction Slide6_Calendar() {\r\n  const [stats, setStats] = useState(null);\r\n  const [quip, setQuip] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchDataAndQuip = async () => {\r\n      try {\r\n        const statsRes = await axios.get('/api/stats/me');\r\n        const userStats = Array.isArray(statsRes.data)\r\n          ? statsRes.data[0]\r\n          : statsRes.data;\r\n        setStats(userStats);\r\n\r\n        const quipRes = await axios.post('/api/generate-quip', {\r\n          statDescription: 'Your month-by-month listening trends.',\r\n        });\r\n        setQuip(quipRes.data.quip);\r\n      } catch (err) {\r\n        setError('Failed to load monthly trends or quip.');\r\n      }\r\n    };\r\n    fetchDataAndQuip();\r\n  }, []);\r\n\r\n  const nextSlide = () => (window.location.href = '/slide7');\r\n\r\n  if (error) {\r\n    return (\r\n      <PageTransition>\r\n        <Text color=\"red.300\">{error}</Text>\r\n      </PageTransition>\r\n    );\r\n  }\r\n\r\n  if (!stats) {\r\n    return (\r\n      <PageTransition>\r\n        <Text>Loading monthly data...</Text>\r\n      </PageTransition>\r\n    );\r\n  }\r\n\r\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n  const data = {\r\n    labels: months,\r\n    datasets: [\r\n      {\r\n        label: 'Streams',\r\n        data: stats.monthlyTrends,\r\n        borderColor: '#1DB954',\r\n        backgroundColor: 'rgba(29, 185, 84, 0.3)',\r\n        fill: true,\r\n        tension: 0.2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <PageTransition>\r\n      <Box\r\n        minH=\"100vh\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        px={4}\r\n      >\r\n        <Text fontSize=\"3xl\" fontWeight=\"bold\" mb={6}>\r\n          Month-by-Month Trends\r\n        </Text>\r\n        <Box width={['90%', '70%', '50%']} mb={6}>\r\n          <Line data={data} />\r\n        </Box>\r\n        <Text color=\"spotify.green\" fontStyle=\"italic\" textAlign=\"center\" mb={4}>\r\n          {quip}\r\n        </Text>\r\n        <Button\r\n          bg=\"spotify.green\"\r\n          color=\"spotify.black\"\r\n          _hover={{ bg: 'green.400', transform: 'scale(1.05)' }}\r\n          onClick={nextSlide}\r\n        >\r\n          Next\r\n        </Button>\r\n      </Box>\r\n    </PageTransition>\r\n  );\r\n}\r\n\r\nexport default Slide6_Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}